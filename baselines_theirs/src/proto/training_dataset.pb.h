// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: training_dataset.proto

#ifndef PROTOBUF_training_5fdataset_2eproto__INCLUDED
#define PROTOBUF_training_5fdataset_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_training_5fdataset_2eproto();
void protobuf_AssignDesc_training_5fdataset_2eproto();
void protobuf_ShutdownFile_training_5fdataset_2eproto();

class BigramWeight;
class BucketizerConfig;
class BucketizerConfig_FeatureBucketizerConfig;
class CandidateAnswer;
class CandidateAnswerFeatures;
class DictionaryEntry;
class TrainingArticle;
class TrainingParagraph;
class TrainingQuestionAnswer;
class UnigramWeight;

// ===================================================================

class TrainingArticle : public ::google::protobuf::Message {
 public:
  TrainingArticle();
  virtual ~TrainingArticle();

  TrainingArticle(const TrainingArticle& from);

  inline TrainingArticle& operator=(const TrainingArticle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainingArticle& default_instance();

  void Swap(TrainingArticle* other);

  // implements Message ----------------------------------------------

  inline TrainingArticle* New() const { return New(NULL); }

  TrainingArticle* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainingArticle& from);
  void MergeFrom(const TrainingArticle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrainingArticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // repeated .TrainingQuestionAnswer questions = 2;
  int questions_size() const;
  void clear_questions();
  static const int kQuestionsFieldNumber = 2;
  const ::TrainingQuestionAnswer& questions(int index) const;
  ::TrainingQuestionAnswer* mutable_questions(int index);
  ::TrainingQuestionAnswer* add_questions();
  ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
      mutable_questions();
  const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
      questions() const;

  // repeated .CandidateAnswer candidateAnswers = 3;
  int candidateanswers_size() const;
  void clear_candidateanswers();
  static const int kCandidateAnswersFieldNumber = 3;
  const ::CandidateAnswer& candidateanswers(int index) const;
  ::CandidateAnswer* mutable_candidateanswers(int index);
  ::CandidateAnswer* add_candidateanswers();
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
      mutable_candidateanswers();
  const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
      candidateanswers() const;

  // repeated .TrainingParagraph paragraphs = 4;
  int paragraphs_size() const;
  void clear_paragraphs();
  static const int kParagraphsFieldNumber = 4;
  const ::TrainingParagraph& paragraphs(int index) const;
  ::TrainingParagraph* mutable_paragraphs(int index);
  ::TrainingParagraph* add_paragraphs();
  ::google::protobuf::RepeatedPtrField< ::TrainingParagraph >*
      mutable_paragraphs();
  const ::google::protobuf::RepeatedPtrField< ::TrainingParagraph >&
      paragraphs() const;

  // @@protoc_insertion_point(class_scope:TrainingArticle)
 private:
  inline void set_has_title();
  inline void clear_has_title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer > questions_;
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswer > candidateanswers_;
  ::google::protobuf::RepeatedPtrField< ::TrainingParagraph > paragraphs_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static TrainingArticle* default_instance_;
};
// -------------------------------------------------------------------

class TrainingParagraph : public ::google::protobuf::Message {
 public:
  TrainingParagraph();
  virtual ~TrainingParagraph();

  TrainingParagraph(const TrainingParagraph& from);

  inline TrainingParagraph& operator=(const TrainingParagraph& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainingParagraph& default_instance();

  void Swap(TrainingParagraph* other);

  // implements Message ----------------------------------------------

  inline TrainingParagraph* New() const { return New(NULL); }

  TrainingParagraph* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainingParagraph& from);
  void MergeFrom(const TrainingParagraph& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrainingParagraph* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TrainingQuestionAnswer questions = 1;
  int questions_size() const;
  void clear_questions();
  static const int kQuestionsFieldNumber = 1;
  const ::TrainingQuestionAnswer& questions(int index) const;
  ::TrainingQuestionAnswer* mutable_questions(int index);
  ::TrainingQuestionAnswer* add_questions();
  ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
      mutable_questions();
  const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
      questions() const;

  // repeated .CandidateAnswer candidateAnswers = 2;
  int candidateanswers_size() const;
  void clear_candidateanswers();
  static const int kCandidateAnswersFieldNumber = 2;
  const ::CandidateAnswer& candidateanswers(int index) const;
  ::CandidateAnswer* mutable_candidateanswers(int index);
  ::CandidateAnswer* add_candidateanswers();
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
      mutable_candidateanswers();
  const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
      candidateanswers() const;

  // @@protoc_insertion_point(class_scope:TrainingParagraph)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer > questions_;
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswer > candidateanswers_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static TrainingParagraph* default_instance_;
};
// -------------------------------------------------------------------

class TrainingQuestionAnswer : public ::google::protobuf::Message {
 public:
  TrainingQuestionAnswer();
  virtual ~TrainingQuestionAnswer();

  TrainingQuestionAnswer(const TrainingQuestionAnswer& from);

  inline TrainingQuestionAnswer& operator=(const TrainingQuestionAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainingQuestionAnswer& default_instance();

  void Swap(TrainingQuestionAnswer* other);

  // implements Message ----------------------------------------------

  inline TrainingQuestionAnswer* New() const { return New(NULL); }

  TrainingQuestionAnswer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainingQuestionAnswer& from);
  void MergeFrom(const TrainingQuestionAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrainingQuestionAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // required int32 correctAnswerIndex = 2;
  bool has_correctanswerindex() const;
  void clear_correctanswerindex();
  static const int kCorrectAnswerIndexFieldNumber = 2;
  ::google::protobuf::int32 correctanswerindex() const;
  void set_correctanswerindex(::google::protobuf::int32 value);

  // repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
  int candidateanswerfeatures_size() const;
  void clear_candidateanswerfeatures();
  static const int kCandidateAnswerFeaturesFieldNumber = 3;
  const ::CandidateAnswerFeatures& candidateanswerfeatures(int index) const;
  ::CandidateAnswerFeatures* mutable_candidateanswerfeatures(int index);
  ::CandidateAnswerFeatures* add_candidateanswerfeatures();
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >*
      mutable_candidateanswerfeatures();
  const ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >&
      candidateanswerfeatures() const;

  // @@protoc_insertion_point(class_scope:TrainingQuestionAnswer)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_correctanswerindex();
  inline void clear_has_correctanswerindex();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures > candidateanswerfeatures_;
  ::google::protobuf::int32 correctanswerindex_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static TrainingQuestionAnswer* default_instance_;
};
// -------------------------------------------------------------------

class CandidateAnswer : public ::google::protobuf::Message {
 public:
  CandidateAnswer();
  virtual ~CandidateAnswer();

  CandidateAnswer(const CandidateAnswer& from);

  inline CandidateAnswer& operator=(const CandidateAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CandidateAnswer& default_instance();

  void Swap(CandidateAnswer* other);

  // implements Message ----------------------------------------------

  inline CandidateAnswer* New() const { return New(NULL); }

  CandidateAnswer* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CandidateAnswer& from);
  void MergeFrom(const CandidateAnswer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CandidateAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 paragraphIndex = 1;
  bool has_paragraphindex() const;
  void clear_paragraphindex();
  static const int kParagraphIndexFieldNumber = 1;
  ::google::protobuf::int32 paragraphindex() const;
  void set_paragraphindex(::google::protobuf::int32 value);

  // optional int32 sentenceIndex = 2;
  bool has_sentenceindex() const;
  void clear_sentenceindex();
  static const int kSentenceIndexFieldNumber = 2;
  ::google::protobuf::int32 sentenceindex() const;
  void set_sentenceindex(::google::protobuf::int32 value);

  // optional int32 spanBeginIndex = 3;
  bool has_spanbeginindex() const;
  void clear_spanbeginindex();
  static const int kSpanBeginIndexFieldNumber = 3;
  ::google::protobuf::int32 spanbeginindex() const;
  void set_spanbeginindex(::google::protobuf::int32 value);

  // optional int32 spanLength = 4;
  bool has_spanlength() const;
  void clear_spanlength();
  static const int kSpanLengthFieldNumber = 4;
  ::google::protobuf::int32 spanlength() const;
  void set_spanlength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CandidateAnswer)
 private:
  inline void set_has_paragraphindex();
  inline void clear_has_paragraphindex();
  inline void set_has_sentenceindex();
  inline void clear_has_sentenceindex();
  inline void set_has_spanbeginindex();
  inline void clear_has_spanbeginindex();
  inline void set_has_spanlength();
  inline void clear_has_spanlength();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 paragraphindex_;
  ::google::protobuf::int32 sentenceindex_;
  ::google::protobuf::int32 spanbeginindex_;
  ::google::protobuf::int32 spanlength_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static CandidateAnswer* default_instance_;
};
// -------------------------------------------------------------------

class CandidateAnswerFeatures : public ::google::protobuf::Message {
 public:
  CandidateAnswerFeatures();
  virtual ~CandidateAnswerFeatures();

  CandidateAnswerFeatures(const CandidateAnswerFeatures& from);

  inline CandidateAnswerFeatures& operator=(const CandidateAnswerFeatures& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CandidateAnswerFeatures& default_instance();

  void Swap(CandidateAnswerFeatures* other);

  // implements Message ----------------------------------------------

  inline CandidateAnswerFeatures* New() const { return New(NULL); }

  CandidateAnswerFeatures* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CandidateAnswerFeatures& from);
  void MergeFrom(const CandidateAnswerFeatures& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CandidateAnswerFeatures* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 indices = 1 [packed = true];
  int indices_size() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 1;
  ::google::protobuf::int32 indices(int index) const;
  void set_indices(int index, ::google::protobuf::int32 value);
  void add_indices(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_indices();

  // repeated float values = 2 [packed = true];
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 2;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField< float >&
      values() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:CandidateAnswerFeatures)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > indices_;
  mutable int _indices_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > values_;
  mutable int _values_cached_byte_size_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static CandidateAnswerFeatures* default_instance_;
};
// -------------------------------------------------------------------

class UnigramWeight : public ::google::protobuf::Message {
 public:
  UnigramWeight();
  virtual ~UnigramWeight();

  UnigramWeight(const UnigramWeight& from);

  inline UnigramWeight& operator=(const UnigramWeight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnigramWeight& default_instance();

  void Swap(UnigramWeight* other);

  // implements Message ----------------------------------------------

  inline UnigramWeight* New() const { return New(NULL); }

  UnigramWeight* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnigramWeight& from);
  void MergeFrom(const UnigramWeight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UnigramWeight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string lemma = 1;
  bool has_lemma() const;
  void clear_lemma();
  static const int kLemmaFieldNumber = 1;
  const ::std::string& lemma() const;
  void set_lemma(const ::std::string& value);
  void set_lemma(const char* value);
  void set_lemma(const char* value, size_t size);
  ::std::string* mutable_lemma();
  ::std::string* release_lemma();
  void set_allocated_lemma(::std::string* lemma);

  // required float weight = 2;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 2;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:UnigramWeight)
 private:
  inline void set_has_lemma();
  inline void clear_has_lemma();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lemma_;
  float weight_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static UnigramWeight* default_instance_;
};
// -------------------------------------------------------------------

class BigramWeight : public ::google::protobuf::Message {
 public:
  BigramWeight();
  virtual ~BigramWeight();

  BigramWeight(const BigramWeight& from);

  inline BigramWeight& operator=(const BigramWeight& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BigramWeight& default_instance();

  void Swap(BigramWeight* other);

  // implements Message ----------------------------------------------

  inline BigramWeight* New() const { return New(NULL); }

  BigramWeight* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BigramWeight& from);
  void MergeFrom(const BigramWeight& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BigramWeight* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string lemma1 = 1;
  bool has_lemma1() const;
  void clear_lemma1();
  static const int kLemma1FieldNumber = 1;
  const ::std::string& lemma1() const;
  void set_lemma1(const ::std::string& value);
  void set_lemma1(const char* value);
  void set_lemma1(const char* value, size_t size);
  ::std::string* mutable_lemma1();
  ::std::string* release_lemma1();
  void set_allocated_lemma1(::std::string* lemma1);

  // required string lemma2 = 2;
  bool has_lemma2() const;
  void clear_lemma2();
  static const int kLemma2FieldNumber = 2;
  const ::std::string& lemma2() const;
  void set_lemma2(const ::std::string& value);
  void set_lemma2(const char* value);
  void set_lemma2(const char* value, size_t size);
  ::std::string* mutable_lemma2();
  ::std::string* release_lemma2();
  void set_allocated_lemma2(::std::string* lemma2);

  // required float weight = 3;
  bool has_weight() const;
  void clear_weight();
  static const int kWeightFieldNumber = 3;
  float weight() const;
  void set_weight(float value);

  // @@protoc_insertion_point(class_scope:BigramWeight)
 private:
  inline void set_has_lemma1();
  inline void clear_has_lemma1();
  inline void set_has_lemma2();
  inline void clear_has_lemma2();
  inline void set_has_weight();
  inline void clear_has_weight();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr lemma1_;
  ::google::protobuf::internal::ArenaStringPtr lemma2_;
  float weight_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static BigramWeight* default_instance_;
};
// -------------------------------------------------------------------

class DictionaryEntry : public ::google::protobuf::Message {
 public:
  DictionaryEntry();
  virtual ~DictionaryEntry();

  DictionaryEntry(const DictionaryEntry& from);

  inline DictionaryEntry& operator=(const DictionaryEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DictionaryEntry& default_instance();

  void Swap(DictionaryEntry* other);

  // implements Message ----------------------------------------------

  inline DictionaryEntry* New() const { return New(NULL); }

  DictionaryEntry* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DictionaryEntry& from);
  void MergeFrom(const DictionaryEntry& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DictionaryEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required int32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // required int64 count = 3;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:DictionaryEntry)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count();
  inline void clear_has_count();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int64 count_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static DictionaryEntry* default_instance_;
};
// -------------------------------------------------------------------

class BucketizerConfig_FeatureBucketizerConfig : public ::google::protobuf::Message {
 public:
  BucketizerConfig_FeatureBucketizerConfig();
  virtual ~BucketizerConfig_FeatureBucketizerConfig();

  BucketizerConfig_FeatureBucketizerConfig(const BucketizerConfig_FeatureBucketizerConfig& from);

  inline BucketizerConfig_FeatureBucketizerConfig& operator=(const BucketizerConfig_FeatureBucketizerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BucketizerConfig_FeatureBucketizerConfig& default_instance();

  void Swap(BucketizerConfig_FeatureBucketizerConfig* other);

  // implements Message ----------------------------------------------

  inline BucketizerConfig_FeatureBucketizerConfig* New() const { return New(NULL); }

  BucketizerConfig_FeatureBucketizerConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BucketizerConfig_FeatureBucketizerConfig& from);
  void MergeFrom(const BucketizerConfig_FeatureBucketizerConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BucketizerConfig_FeatureBucketizerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated float lower_bounds = 2;
  int lower_bounds_size() const;
  void clear_lower_bounds();
  static const int kLowerBoundsFieldNumber = 2;
  float lower_bounds(int index) const;
  void set_lower_bounds(int index, float value);
  void add_lower_bounds(float value);
  const ::google::protobuf::RepeatedField< float >&
      lower_bounds() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_lower_bounds();

  // @@protoc_insertion_point(class_scope:BucketizerConfig.FeatureBucketizerConfig)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::RepeatedField< float > lower_bounds_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static BucketizerConfig_FeatureBucketizerConfig* default_instance_;
};
// -------------------------------------------------------------------

class BucketizerConfig : public ::google::protobuf::Message {
 public:
  BucketizerConfig();
  virtual ~BucketizerConfig();

  BucketizerConfig(const BucketizerConfig& from);

  inline BucketizerConfig& operator=(const BucketizerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BucketizerConfig& default_instance();

  void Swap(BucketizerConfig* other);

  // implements Message ----------------------------------------------

  inline BucketizerConfig* New() const { return New(NULL); }

  BucketizerConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BucketizerConfig& from);
  void MergeFrom(const BucketizerConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BucketizerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef BucketizerConfig_FeatureBucketizerConfig FeatureBucketizerConfig;

  // accessors -------------------------------------------------------

  // repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
  int features_size() const;
  void clear_features();
  static const int kFeaturesFieldNumber = 1;
  const ::BucketizerConfig_FeatureBucketizerConfig& features(int index) const;
  ::BucketizerConfig_FeatureBucketizerConfig* mutable_features(int index);
  ::BucketizerConfig_FeatureBucketizerConfig* add_features();
  ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >*
      mutable_features();
  const ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >&
      features() const;

  // @@protoc_insertion_point(class_scope:BucketizerConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig > features_;
  friend void  protobuf_AddDesc_training_5fdataset_2eproto();
  friend void protobuf_AssignDesc_training_5fdataset_2eproto();
  friend void protobuf_ShutdownFile_training_5fdataset_2eproto();

  void InitAsDefaultInstance();
  static BucketizerConfig* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingArticle

// required string title = 1;
inline bool TrainingArticle::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrainingArticle::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrainingArticle::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrainingArticle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& TrainingArticle::title() const {
  // @@protoc_insertion_point(field_get:TrainingArticle.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingArticle::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrainingArticle.title)
}
inline void TrainingArticle::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrainingArticle.title)
}
inline void TrainingArticle::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrainingArticle.title)
}
inline ::std::string* TrainingArticle::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:TrainingArticle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingArticle::release_title() {
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingArticle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:TrainingArticle.title)
}

// repeated .TrainingQuestionAnswer questions = 2;
inline int TrainingArticle::questions_size() const {
  return questions_.size();
}
inline void TrainingArticle::clear_questions() {
  questions_.Clear();
}
inline const ::TrainingQuestionAnswer& TrainingArticle::questions(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.questions)
  return questions_.Get(index);
}
inline ::TrainingQuestionAnswer* TrainingArticle::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.questions)
  return questions_.Mutable(index);
}
inline ::TrainingQuestionAnswer* TrainingArticle::add_questions() {
  // @@protoc_insertion_point(field_add:TrainingArticle.questions)
  return questions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
TrainingArticle::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.questions)
  return &questions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
TrainingArticle::questions() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.questions)
  return questions_;
}

// repeated .CandidateAnswer candidateAnswers = 3;
inline int TrainingArticle::candidateanswers_size() const {
  return candidateanswers_.size();
}
inline void TrainingArticle::clear_candidateanswers() {
  candidateanswers_.Clear();
}
inline const ::CandidateAnswer& TrainingArticle::candidateanswers(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.candidateAnswers)
  return candidateanswers_.Get(index);
}
inline ::CandidateAnswer* TrainingArticle::mutable_candidateanswers(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.candidateAnswers)
  return candidateanswers_.Mutable(index);
}
inline ::CandidateAnswer* TrainingArticle::add_candidateanswers() {
  // @@protoc_insertion_point(field_add:TrainingArticle.candidateAnswers)
  return candidateanswers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
TrainingArticle::mutable_candidateanswers() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.candidateAnswers)
  return &candidateanswers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
TrainingArticle::candidateanswers() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.candidateAnswers)
  return candidateanswers_;
}

// repeated .TrainingParagraph paragraphs = 4;
inline int TrainingArticle::paragraphs_size() const {
  return paragraphs_.size();
}
inline void TrainingArticle::clear_paragraphs() {
  paragraphs_.Clear();
}
inline const ::TrainingParagraph& TrainingArticle::paragraphs(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.paragraphs)
  return paragraphs_.Get(index);
}
inline ::TrainingParagraph* TrainingArticle::mutable_paragraphs(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.paragraphs)
  return paragraphs_.Mutable(index);
}
inline ::TrainingParagraph* TrainingArticle::add_paragraphs() {
  // @@protoc_insertion_point(field_add:TrainingArticle.paragraphs)
  return paragraphs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TrainingParagraph >*
TrainingArticle::mutable_paragraphs() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.paragraphs)
  return &paragraphs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TrainingParagraph >&
TrainingArticle::paragraphs() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.paragraphs)
  return paragraphs_;
}

// -------------------------------------------------------------------

// TrainingParagraph

// repeated .TrainingQuestionAnswer questions = 1;
inline int TrainingParagraph::questions_size() const {
  return questions_.size();
}
inline void TrainingParagraph::clear_questions() {
  questions_.Clear();
}
inline const ::TrainingQuestionAnswer& TrainingParagraph::questions(int index) const {
  // @@protoc_insertion_point(field_get:TrainingParagraph.questions)
  return questions_.Get(index);
}
inline ::TrainingQuestionAnswer* TrainingParagraph::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingParagraph.questions)
  return questions_.Mutable(index);
}
inline ::TrainingQuestionAnswer* TrainingParagraph::add_questions() {
  // @@protoc_insertion_point(field_add:TrainingParagraph.questions)
  return questions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
TrainingParagraph::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:TrainingParagraph.questions)
  return &questions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
TrainingParagraph::questions() const {
  // @@protoc_insertion_point(field_list:TrainingParagraph.questions)
  return questions_;
}

// repeated .CandidateAnswer candidateAnswers = 2;
inline int TrainingParagraph::candidateanswers_size() const {
  return candidateanswers_.size();
}
inline void TrainingParagraph::clear_candidateanswers() {
  candidateanswers_.Clear();
}
inline const ::CandidateAnswer& TrainingParagraph::candidateanswers(int index) const {
  // @@protoc_insertion_point(field_get:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Get(index);
}
inline ::CandidateAnswer* TrainingParagraph::mutable_candidateanswers(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Mutable(index);
}
inline ::CandidateAnswer* TrainingParagraph::add_candidateanswers() {
  // @@protoc_insertion_point(field_add:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
TrainingParagraph::mutable_candidateanswers() {
  // @@protoc_insertion_point(field_mutable_list:TrainingParagraph.candidateAnswers)
  return &candidateanswers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
TrainingParagraph::candidateanswers() const {
  // @@protoc_insertion_point(field_list:TrainingParagraph.candidateAnswers)
  return candidateanswers_;
}

// -------------------------------------------------------------------

// TrainingQuestionAnswer

// required string id = 1;
inline bool TrainingQuestionAnswer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TrainingQuestionAnswer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TrainingQuestionAnswer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TrainingQuestionAnswer::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& TrainingQuestionAnswer::id() const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingQuestionAnswer::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrainingQuestionAnswer.id)
}
inline void TrainingQuestionAnswer::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrainingQuestionAnswer.id)
}
inline void TrainingQuestionAnswer::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrainingQuestionAnswer.id)
}
inline ::std::string* TrainingQuestionAnswer::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:TrainingQuestionAnswer.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TrainingQuestionAnswer::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TrainingQuestionAnswer::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:TrainingQuestionAnswer.id)
}

// required int32 correctAnswerIndex = 2;
inline bool TrainingQuestionAnswer::has_correctanswerindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TrainingQuestionAnswer::set_has_correctanswerindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TrainingQuestionAnswer::clear_has_correctanswerindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TrainingQuestionAnswer::clear_correctanswerindex() {
  correctanswerindex_ = 0;
  clear_has_correctanswerindex();
}
inline ::google::protobuf::int32 TrainingQuestionAnswer::correctanswerindex() const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.correctAnswerIndex)
  return correctanswerindex_;
}
inline void TrainingQuestionAnswer::set_correctanswerindex(::google::protobuf::int32 value) {
  set_has_correctanswerindex();
  correctanswerindex_ = value;
  // @@protoc_insertion_point(field_set:TrainingQuestionAnswer.correctAnswerIndex)
}

// repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
inline int TrainingQuestionAnswer::candidateanswerfeatures_size() const {
  return candidateanswerfeatures_.size();
}
inline void TrainingQuestionAnswer::clear_candidateanswerfeatures() {
  candidateanswerfeatures_.Clear();
}
inline const ::CandidateAnswerFeatures& TrainingQuestionAnswer::candidateanswerfeatures(int index) const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Get(index);
}
inline ::CandidateAnswerFeatures* TrainingQuestionAnswer::mutable_candidateanswerfeatures(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Mutable(index);
}
inline ::CandidateAnswerFeatures* TrainingQuestionAnswer::add_candidateanswerfeatures() {
  // @@protoc_insertion_point(field_add:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >*
TrainingQuestionAnswer::mutable_candidateanswerfeatures() {
  // @@protoc_insertion_point(field_mutable_list:TrainingQuestionAnswer.candidateAnswerFeatures)
  return &candidateanswerfeatures_;
}
inline const ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >&
TrainingQuestionAnswer::candidateanswerfeatures() const {
  // @@protoc_insertion_point(field_list:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_;
}

// -------------------------------------------------------------------

// CandidateAnswer

// optional int32 paragraphIndex = 1;
inline bool CandidateAnswer::has_paragraphindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CandidateAnswer::set_has_paragraphindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CandidateAnswer::clear_has_paragraphindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CandidateAnswer::clear_paragraphindex() {
  paragraphindex_ = 0;
  clear_has_paragraphindex();
}
inline ::google::protobuf::int32 CandidateAnswer::paragraphindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.paragraphIndex)
  return paragraphindex_;
}
inline void CandidateAnswer::set_paragraphindex(::google::protobuf::int32 value) {
  set_has_paragraphindex();
  paragraphindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.paragraphIndex)
}

// optional int32 sentenceIndex = 2;
inline bool CandidateAnswer::has_sentenceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CandidateAnswer::set_has_sentenceindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CandidateAnswer::clear_has_sentenceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CandidateAnswer::clear_sentenceindex() {
  sentenceindex_ = 0;
  clear_has_sentenceindex();
}
inline ::google::protobuf::int32 CandidateAnswer::sentenceindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.sentenceIndex)
  return sentenceindex_;
}
inline void CandidateAnswer::set_sentenceindex(::google::protobuf::int32 value) {
  set_has_sentenceindex();
  sentenceindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.sentenceIndex)
}

// optional int32 spanBeginIndex = 3;
inline bool CandidateAnswer::has_spanbeginindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CandidateAnswer::set_has_spanbeginindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CandidateAnswer::clear_has_spanbeginindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CandidateAnswer::clear_spanbeginindex() {
  spanbeginindex_ = 0;
  clear_has_spanbeginindex();
}
inline ::google::protobuf::int32 CandidateAnswer::spanbeginindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.spanBeginIndex)
  return spanbeginindex_;
}
inline void CandidateAnswer::set_spanbeginindex(::google::protobuf::int32 value) {
  set_has_spanbeginindex();
  spanbeginindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.spanBeginIndex)
}

// optional int32 spanLength = 4;
inline bool CandidateAnswer::has_spanlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CandidateAnswer::set_has_spanlength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CandidateAnswer::clear_has_spanlength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CandidateAnswer::clear_spanlength() {
  spanlength_ = 0;
  clear_has_spanlength();
}
inline ::google::protobuf::int32 CandidateAnswer::spanlength() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.spanLength)
  return spanlength_;
}
inline void CandidateAnswer::set_spanlength(::google::protobuf::int32 value) {
  set_has_spanlength();
  spanlength_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.spanLength)
}

// -------------------------------------------------------------------

// CandidateAnswerFeatures

// repeated int32 indices = 1 [packed = true];
inline int CandidateAnswerFeatures::indices_size() const {
  return indices_.size();
}
inline void CandidateAnswerFeatures::clear_indices() {
  indices_.Clear();
}
inline ::google::protobuf::int32 CandidateAnswerFeatures::indices(int index) const {
  // @@protoc_insertion_point(field_get:CandidateAnswerFeatures.indices)
  return indices_.Get(index);
}
inline void CandidateAnswerFeatures::set_indices(int index, ::google::protobuf::int32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:CandidateAnswerFeatures.indices)
}
inline void CandidateAnswerFeatures::add_indices(::google::protobuf::int32 value) {
  indices_.Add(value);
  // @@protoc_insertion_point(field_add:CandidateAnswerFeatures.indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CandidateAnswerFeatures::indices() const {
  // @@protoc_insertion_point(field_list:CandidateAnswerFeatures.indices)
  return indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CandidateAnswerFeatures::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:CandidateAnswerFeatures.indices)
  return &indices_;
}

// repeated float values = 2 [packed = true];
inline int CandidateAnswerFeatures::values_size() const {
  return values_.size();
}
inline void CandidateAnswerFeatures::clear_values() {
  values_.Clear();
}
inline float CandidateAnswerFeatures::values(int index) const {
  // @@protoc_insertion_point(field_get:CandidateAnswerFeatures.values)
  return values_.Get(index);
}
inline void CandidateAnswerFeatures::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:CandidateAnswerFeatures.values)
}
inline void CandidateAnswerFeatures::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:CandidateAnswerFeatures.values)
}
inline const ::google::protobuf::RepeatedField< float >&
CandidateAnswerFeatures::values() const {
  // @@protoc_insertion_point(field_list:CandidateAnswerFeatures.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
CandidateAnswerFeatures::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CandidateAnswerFeatures.values)
  return &values_;
}

// -------------------------------------------------------------------

// UnigramWeight

// required string lemma = 1;
inline bool UnigramWeight::has_lemma() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnigramWeight::set_has_lemma() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnigramWeight::clear_has_lemma() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnigramWeight::clear_lemma() {
  lemma_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma();
}
inline const ::std::string& UnigramWeight::lemma() const {
  // @@protoc_insertion_point(field_get:UnigramWeight.lemma)
  return lemma_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnigramWeight::set_lemma(const ::std::string& value) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnigramWeight.lemma)
}
inline void UnigramWeight::set_lemma(const char* value) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnigramWeight.lemma)
}
inline void UnigramWeight::set_lemma(const char* value, size_t size) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnigramWeight.lemma)
}
inline ::std::string* UnigramWeight::mutable_lemma() {
  set_has_lemma();
  // @@protoc_insertion_point(field_mutable:UnigramWeight.lemma)
  return lemma_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnigramWeight::release_lemma() {
  clear_has_lemma();
  return lemma_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnigramWeight::set_allocated_lemma(::std::string* lemma) {
  if (lemma != NULL) {
    set_has_lemma();
  } else {
    clear_has_lemma();
  }
  lemma_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma);
  // @@protoc_insertion_point(field_set_allocated:UnigramWeight.lemma)
}

// required float weight = 2;
inline bool UnigramWeight::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnigramWeight::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnigramWeight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnigramWeight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float UnigramWeight::weight() const {
  // @@protoc_insertion_point(field_get:UnigramWeight.weight)
  return weight_;
}
inline void UnigramWeight::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:UnigramWeight.weight)
}

// -------------------------------------------------------------------

// BigramWeight

// required string lemma1 = 1;
inline bool BigramWeight::has_lemma1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BigramWeight::set_has_lemma1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BigramWeight::clear_has_lemma1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BigramWeight::clear_lemma1() {
  lemma1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma1();
}
inline const ::std::string& BigramWeight::lemma1() const {
  // @@protoc_insertion_point(field_get:BigramWeight.lemma1)
  return lemma1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BigramWeight::set_lemma1(const ::std::string& value) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigramWeight.lemma1)
}
inline void BigramWeight::set_lemma1(const char* value) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigramWeight.lemma1)
}
inline void BigramWeight::set_lemma1(const char* value, size_t size) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigramWeight.lemma1)
}
inline ::std::string* BigramWeight::mutable_lemma1() {
  set_has_lemma1();
  // @@protoc_insertion_point(field_mutable:BigramWeight.lemma1)
  return lemma1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BigramWeight::release_lemma1() {
  clear_has_lemma1();
  return lemma1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BigramWeight::set_allocated_lemma1(::std::string* lemma1) {
  if (lemma1 != NULL) {
    set_has_lemma1();
  } else {
    clear_has_lemma1();
  }
  lemma1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma1);
  // @@protoc_insertion_point(field_set_allocated:BigramWeight.lemma1)
}

// required string lemma2 = 2;
inline bool BigramWeight::has_lemma2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BigramWeight::set_has_lemma2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BigramWeight::clear_has_lemma2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BigramWeight::clear_lemma2() {
  lemma2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma2();
}
inline const ::std::string& BigramWeight::lemma2() const {
  // @@protoc_insertion_point(field_get:BigramWeight.lemma2)
  return lemma2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BigramWeight::set_lemma2(const ::std::string& value) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigramWeight.lemma2)
}
inline void BigramWeight::set_lemma2(const char* value) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigramWeight.lemma2)
}
inline void BigramWeight::set_lemma2(const char* value, size_t size) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigramWeight.lemma2)
}
inline ::std::string* BigramWeight::mutable_lemma2() {
  set_has_lemma2();
  // @@protoc_insertion_point(field_mutable:BigramWeight.lemma2)
  return lemma2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BigramWeight::release_lemma2() {
  clear_has_lemma2();
  return lemma2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BigramWeight::set_allocated_lemma2(::std::string* lemma2) {
  if (lemma2 != NULL) {
    set_has_lemma2();
  } else {
    clear_has_lemma2();
  }
  lemma2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma2);
  // @@protoc_insertion_point(field_set_allocated:BigramWeight.lemma2)
}

// required float weight = 3;
inline bool BigramWeight::has_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BigramWeight::set_has_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BigramWeight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BigramWeight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
inline float BigramWeight::weight() const {
  // @@protoc_insertion_point(field_get:BigramWeight.weight)
  return weight_;
}
inline void BigramWeight::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:BigramWeight.weight)
}

// -------------------------------------------------------------------

// DictionaryEntry

// required string name = 1;
inline bool DictionaryEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DictionaryEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DictionaryEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DictionaryEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& DictionaryEntry::name() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DictionaryEntry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DictionaryEntry.name)
}
inline void DictionaryEntry::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DictionaryEntry.name)
}
inline void DictionaryEntry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DictionaryEntry.name)
}
inline ::std::string* DictionaryEntry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DictionaryEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DictionaryEntry::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DictionaryEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DictionaryEntry.name)
}

// required int32 index = 2;
inline bool DictionaryEntry::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DictionaryEntry::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DictionaryEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DictionaryEntry::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 DictionaryEntry::index() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.index)
  return index_;
}
inline void DictionaryEntry::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:DictionaryEntry.index)
}

// required int64 count = 3;
inline bool DictionaryEntry::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DictionaryEntry::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DictionaryEntry::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DictionaryEntry::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::int64 DictionaryEntry::count() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.count)
  return count_;
}
inline void DictionaryEntry::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:DictionaryEntry.count)
}

// -------------------------------------------------------------------

// BucketizerConfig_FeatureBucketizerConfig

// required string name = 1;
inline bool BucketizerConfig_FeatureBucketizerConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BucketizerConfig_FeatureBucketizerConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BucketizerConfig_FeatureBucketizerConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& BucketizerConfig_FeatureBucketizerConfig::name() const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.FeatureBucketizerConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketizerConfig.FeatureBucketizerConfig.name)
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketizerConfig.FeatureBucketizerConfig.name)
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketizerConfig.FeatureBucketizerConfig.name)
}
inline ::std::string* BucketizerConfig_FeatureBucketizerConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:BucketizerConfig.FeatureBucketizerConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BucketizerConfig_FeatureBucketizerConfig::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:BucketizerConfig.FeatureBucketizerConfig.name)
}

// repeated float lower_bounds = 2;
inline int BucketizerConfig_FeatureBucketizerConfig::lower_bounds_size() const {
  return lower_bounds_.size();
}
inline void BucketizerConfig_FeatureBucketizerConfig::clear_lower_bounds() {
  lower_bounds_.Clear();
}
inline float BucketizerConfig_FeatureBucketizerConfig::lower_bounds(int index) const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return lower_bounds_.Get(index);
}
inline void BucketizerConfig_FeatureBucketizerConfig::set_lower_bounds(int index, float value) {
  lower_bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
}
inline void BucketizerConfig_FeatureBucketizerConfig::add_lower_bounds(float value) {
  lower_bounds_.Add(value);
  // @@protoc_insertion_point(field_add:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
}
inline const ::google::protobuf::RepeatedField< float >&
BucketizerConfig_FeatureBucketizerConfig::lower_bounds() const {
  // @@protoc_insertion_point(field_list:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return lower_bounds_;
}
inline ::google::protobuf::RepeatedField< float >*
BucketizerConfig_FeatureBucketizerConfig::mutable_lower_bounds() {
  // @@protoc_insertion_point(field_mutable_list:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return &lower_bounds_;
}

// -------------------------------------------------------------------

// BucketizerConfig

// repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
inline int BucketizerConfig::features_size() const {
  return features_.size();
}
inline void BucketizerConfig::clear_features() {
  features_.Clear();
}
inline const ::BucketizerConfig_FeatureBucketizerConfig& BucketizerConfig::features(int index) const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.features)
  return features_.Get(index);
}
inline ::BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:BucketizerConfig.features)
  return features_.Mutable(index);
}
inline ::BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig::add_features() {
  // @@protoc_insertion_point(field_add:BucketizerConfig.features)
  return features_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >*
BucketizerConfig::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:BucketizerConfig.features)
  return &features_;
}
inline const ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >&
BucketizerConfig::features() const {
  // @@protoc_insertion_point(field_list:BucketizerConfig.features)
  return features_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_training_5fdataset_2eproto__INCLUDED
