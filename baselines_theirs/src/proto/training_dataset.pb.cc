// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: training_dataset.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "training_dataset.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* TrainingArticle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingArticle_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainingParagraph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingParagraph_reflection_ = NULL;
const ::google::protobuf::Descriptor* TrainingQuestionAnswer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrainingQuestionAnswer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CandidateAnswer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CandidateAnswer_reflection_ = NULL;
const ::google::protobuf::Descriptor* CandidateAnswerFeatures_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CandidateAnswerFeatures_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnigramWeight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnigramWeight_reflection_ = NULL;
const ::google::protobuf::Descriptor* BigramWeight_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BigramWeight_reflection_ = NULL;
const ::google::protobuf::Descriptor* DictionaryEntry_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DictionaryEntry_reflection_ = NULL;
const ::google::protobuf::Descriptor* BucketizerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BucketizerConfig_reflection_ = NULL;
const ::google::protobuf::Descriptor* BucketizerConfig_FeatureBucketizerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BucketizerConfig_FeatureBucketizerConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_training_5fdataset_2eproto() {
  protobuf_AddDesc_training_5fdataset_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "training_dataset.proto");
  GOOGLE_CHECK(file != NULL);
  TrainingArticle_descriptor_ = file->message_type(0);
  static const int TrainingArticle_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, questions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, candidateanswers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, paragraphs_),
  };
  TrainingArticle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrainingArticle_descriptor_,
      TrainingArticle::default_instance_,
      TrainingArticle_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, _has_bits_[0]),
      -1,
      -1,
      sizeof(TrainingArticle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingArticle, _internal_metadata_),
      -1);
  TrainingParagraph_descriptor_ = file->message_type(1);
  static const int TrainingParagraph_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingParagraph, questions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingParagraph, candidateanswers_),
  };
  TrainingParagraph_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrainingParagraph_descriptor_,
      TrainingParagraph::default_instance_,
      TrainingParagraph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingParagraph, _has_bits_[0]),
      -1,
      -1,
      sizeof(TrainingParagraph),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingParagraph, _internal_metadata_),
      -1);
  TrainingQuestionAnswer_descriptor_ = file->message_type(2);
  static const int TrainingQuestionAnswer_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingQuestionAnswer, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingQuestionAnswer, correctanswerindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingQuestionAnswer, candidateanswerfeatures_),
  };
  TrainingQuestionAnswer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrainingQuestionAnswer_descriptor_,
      TrainingQuestionAnswer::default_instance_,
      TrainingQuestionAnswer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingQuestionAnswer, _has_bits_[0]),
      -1,
      -1,
      sizeof(TrainingQuestionAnswer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrainingQuestionAnswer, _internal_metadata_),
      -1);
  CandidateAnswer_descriptor_ = file->message_type(3);
  static const int CandidateAnswer_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, paragraphindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, sentenceindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, spanbeginindex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, spanlength_),
  };
  CandidateAnswer_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CandidateAnswer_descriptor_,
      CandidateAnswer::default_instance_,
      CandidateAnswer_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, _has_bits_[0]),
      -1,
      -1,
      sizeof(CandidateAnswer),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswer, _internal_metadata_),
      -1);
  CandidateAnswerFeatures_descriptor_ = file->message_type(4);
  static const int CandidateAnswerFeatures_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswerFeatures, indices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswerFeatures, values_),
  };
  CandidateAnswerFeatures_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CandidateAnswerFeatures_descriptor_,
      CandidateAnswerFeatures::default_instance_,
      CandidateAnswerFeatures_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswerFeatures, _has_bits_[0]),
      -1,
      -1,
      sizeof(CandidateAnswerFeatures),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CandidateAnswerFeatures, _internal_metadata_),
      -1);
  UnigramWeight_descriptor_ = file->message_type(5);
  static const int UnigramWeight_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnigramWeight, lemma_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnigramWeight, weight_),
  };
  UnigramWeight_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnigramWeight_descriptor_,
      UnigramWeight::default_instance_,
      UnigramWeight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnigramWeight, _has_bits_[0]),
      -1,
      -1,
      sizeof(UnigramWeight),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnigramWeight, _internal_metadata_),
      -1);
  BigramWeight_descriptor_ = file->message_type(6);
  static const int BigramWeight_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigramWeight, lemma1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigramWeight, lemma2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigramWeight, weight_),
  };
  BigramWeight_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BigramWeight_descriptor_,
      BigramWeight::default_instance_,
      BigramWeight_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigramWeight, _has_bits_[0]),
      -1,
      -1,
      sizeof(BigramWeight),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BigramWeight, _internal_metadata_),
      -1);
  DictionaryEntry_descriptor_ = file->message_type(7);
  static const int DictionaryEntry_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictionaryEntry, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictionaryEntry, index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictionaryEntry, count_),
  };
  DictionaryEntry_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DictionaryEntry_descriptor_,
      DictionaryEntry::default_instance_,
      DictionaryEntry_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictionaryEntry, _has_bits_[0]),
      -1,
      -1,
      sizeof(DictionaryEntry),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DictionaryEntry, _internal_metadata_),
      -1);
  BucketizerConfig_descriptor_ = file->message_type(8);
  static const int BucketizerConfig_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig, features_),
  };
  BucketizerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BucketizerConfig_descriptor_,
      BucketizerConfig::default_instance_,
      BucketizerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(BucketizerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig, _internal_metadata_),
      -1);
  BucketizerConfig_FeatureBucketizerConfig_descriptor_ = BucketizerConfig_descriptor_->nested_type(0);
  static const int BucketizerConfig_FeatureBucketizerConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig_FeatureBucketizerConfig, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig_FeatureBucketizerConfig, lower_bounds_),
  };
  BucketizerConfig_FeatureBucketizerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BucketizerConfig_FeatureBucketizerConfig_descriptor_,
      BucketizerConfig_FeatureBucketizerConfig::default_instance_,
      BucketizerConfig_FeatureBucketizerConfig_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig_FeatureBucketizerConfig, _has_bits_[0]),
      -1,
      -1,
      sizeof(BucketizerConfig_FeatureBucketizerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketizerConfig_FeatureBucketizerConfig, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_training_5fdataset_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrainingArticle_descriptor_, &TrainingArticle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrainingParagraph_descriptor_, &TrainingParagraph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrainingQuestionAnswer_descriptor_, &TrainingQuestionAnswer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CandidateAnswer_descriptor_, &CandidateAnswer::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CandidateAnswerFeatures_descriptor_, &CandidateAnswerFeatures::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnigramWeight_descriptor_, &UnigramWeight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BigramWeight_descriptor_, &BigramWeight::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DictionaryEntry_descriptor_, &DictionaryEntry::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BucketizerConfig_descriptor_, &BucketizerConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BucketizerConfig_FeatureBucketizerConfig_descriptor_, &BucketizerConfig_FeatureBucketizerConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_training_5fdataset_2eproto() {
  delete TrainingArticle::default_instance_;
  delete TrainingArticle_reflection_;
  delete TrainingParagraph::default_instance_;
  delete TrainingParagraph_reflection_;
  delete TrainingQuestionAnswer::default_instance_;
  delete TrainingQuestionAnswer_reflection_;
  delete CandidateAnswer::default_instance_;
  delete CandidateAnswer_reflection_;
  delete CandidateAnswerFeatures::default_instance_;
  delete CandidateAnswerFeatures_reflection_;
  delete UnigramWeight::default_instance_;
  delete UnigramWeight_reflection_;
  delete BigramWeight::default_instance_;
  delete BigramWeight_reflection_;
  delete DictionaryEntry::default_instance_;
  delete DictionaryEntry_reflection_;
  delete BucketizerConfig::default_instance_;
  delete BucketizerConfig_reflection_;
  delete BucketizerConfig_FeatureBucketizerConfig::default_instance_;
  delete BucketizerConfig_FeatureBucketizerConfig_reflection_;
}

void protobuf_AddDesc_training_5fdataset_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\026training_dataset.proto\"\240\001\n\017TrainingArt"
    "icle\022\r\n\005title\030\001 \002(\t\022*\n\tquestions\030\002 \003(\0132\027"
    ".TrainingQuestionAnswer\022*\n\020candidateAnsw"
    "ers\030\003 \003(\0132\020.CandidateAnswer\022&\n\nparagraph"
    "s\030\004 \003(\0132\022.TrainingParagraph\"k\n\021TrainingP"
    "aragraph\022*\n\tquestions\030\001 \003(\0132\027.TrainingQu"
    "estionAnswer\022*\n\020candidateAnswers\030\002 \003(\0132\020"
    ".CandidateAnswer\"{\n\026TrainingQuestionAnsw"
    "er\022\n\n\002id\030\001 \002(\t\022\032\n\022correctAnswerIndex\030\002 \002"
    "(\005\0229\n\027candidateAnswerFeatures\030\003 \003(\0132\030.Ca"
    "ndidateAnswerFeatures\"l\n\017CandidateAnswer"
    "\022\026\n\016paragraphIndex\030\001 \001(\005\022\025\n\rsentenceInde"
    "x\030\002 \001(\005\022\026\n\016spanBeginIndex\030\003 \001(\005\022\022\n\nspanL"
    "ength\030\004 \001(\005\"B\n\027CandidateAnswerFeatures\022\023"
    "\n\007indices\030\001 \003(\005B\002\020\001\022\022\n\006values\030\002 \003(\002B\002\020\001\""
    ".\n\rUnigramWeight\022\r\n\005lemma\030\001 \002(\t\022\016\n\006weigh"
    "t\030\002 \002(\002\">\n\014BigramWeight\022\016\n\006lemma1\030\001 \002(\t\022"
    "\016\n\006lemma2\030\002 \002(\t\022\016\n\006weight\030\003 \002(\002\"=\n\017Dicti"
    "onaryEntry\022\014\n\004name\030\001 \002(\t\022\r\n\005index\030\002 \002(\005\022"
    "\r\n\005count\030\003 \002(\003\"\216\001\n\020BucketizerConfig\022;\n\010f"
    "eatures\030\001 \003(\0132).BucketizerConfig.Feature"
    "BucketizerConfig\032=\n\027FeatureBucketizerCon"
    "fig\022\014\n\004name\030\001 \002(\t\022\024\n\014lower_bounds\030\002 \003(\002", 919);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "training_dataset.proto", &protobuf_RegisterTypes);
  TrainingArticle::default_instance_ = new TrainingArticle();
  TrainingParagraph::default_instance_ = new TrainingParagraph();
  TrainingQuestionAnswer::default_instance_ = new TrainingQuestionAnswer();
  CandidateAnswer::default_instance_ = new CandidateAnswer();
  CandidateAnswerFeatures::default_instance_ = new CandidateAnswerFeatures();
  UnigramWeight::default_instance_ = new UnigramWeight();
  BigramWeight::default_instance_ = new BigramWeight();
  DictionaryEntry::default_instance_ = new DictionaryEntry();
  BucketizerConfig::default_instance_ = new BucketizerConfig();
  BucketizerConfig_FeatureBucketizerConfig::default_instance_ = new BucketizerConfig_FeatureBucketizerConfig();
  TrainingArticle::default_instance_->InitAsDefaultInstance();
  TrainingParagraph::default_instance_->InitAsDefaultInstance();
  TrainingQuestionAnswer::default_instance_->InitAsDefaultInstance();
  CandidateAnswer::default_instance_->InitAsDefaultInstance();
  CandidateAnswerFeatures::default_instance_->InitAsDefaultInstance();
  UnigramWeight::default_instance_->InitAsDefaultInstance();
  BigramWeight::default_instance_->InitAsDefaultInstance();
  DictionaryEntry::default_instance_->InitAsDefaultInstance();
  BucketizerConfig::default_instance_->InitAsDefaultInstance();
  BucketizerConfig_FeatureBucketizerConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_training_5fdataset_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_training_5fdataset_2eproto {
  StaticDescriptorInitializer_training_5fdataset_2eproto() {
    protobuf_AddDesc_training_5fdataset_2eproto();
  }
} static_descriptor_initializer_training_5fdataset_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingArticle::kTitleFieldNumber;
const int TrainingArticle::kQuestionsFieldNumber;
const int TrainingArticle::kCandidateAnswersFieldNumber;
const int TrainingArticle::kParagraphsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingArticle::TrainingArticle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrainingArticle)
}

void TrainingArticle::InitAsDefaultInstance() {
}

TrainingArticle::TrainingArticle(const TrainingArticle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TrainingArticle)
}

void TrainingArticle::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainingArticle::~TrainingArticle() {
  // @@protoc_insertion_point(destructor:TrainingArticle)
  SharedDtor();
}

void TrainingArticle::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TrainingArticle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingArticle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingArticle_descriptor_;
}

const TrainingArticle& TrainingArticle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

TrainingArticle* TrainingArticle::default_instance_ = NULL;

TrainingArticle* TrainingArticle::New(::google::protobuf::Arena* arena) const {
  TrainingArticle* n = new TrainingArticle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainingArticle::Clear() {
  if (has_title()) {
    title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  questions_.Clear();
  candidateanswers_.Clear();
  paragraphs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrainingArticle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrainingArticle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrainingArticle.title");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_questions;
        break;
      }

      // repeated .TrainingQuestionAnswer questions = 2;
      case 2: {
        if (tag == 18) {
         parse_questions:
          DO_(input->IncrementRecursionDepth());
         parse_loop_questions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_questions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_questions;
        if (input->ExpectTag(26)) goto parse_loop_candidateAnswers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CandidateAnswer candidateAnswers = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_candidateAnswers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_candidateanswers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_candidateAnswers;
        if (input->ExpectTag(34)) goto parse_loop_paragraphs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .TrainingParagraph paragraphs = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_paragraphs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_paragraphs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_paragraphs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrainingArticle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrainingArticle)
  return false;
#undef DO_
}

void TrainingArticle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrainingArticle)
  // required string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrainingArticle.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // repeated .TrainingQuestionAnswer questions = 2;
  for (unsigned int i = 0, n = this->questions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->questions(i), output);
  }

  // repeated .CandidateAnswer candidateAnswers = 3;
  for (unsigned int i = 0, n = this->candidateanswers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->candidateanswers(i), output);
  }

  // repeated .TrainingParagraph paragraphs = 4;
  for (unsigned int i = 0, n = this->paragraphs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->paragraphs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrainingArticle)
}

::google::protobuf::uint8* TrainingArticle::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainingArticle)
  // required string title = 1;
  if (has_title()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrainingArticle.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // repeated .TrainingQuestionAnswer questions = 2;
  for (unsigned int i = 0, n = this->questions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->questions(i), target);
  }

  // repeated .CandidateAnswer candidateAnswers = 3;
  for (unsigned int i = 0, n = this->candidateanswers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->candidateanswers(i), target);
  }

  // repeated .TrainingParagraph paragraphs = 4;
  for (unsigned int i = 0, n = this->paragraphs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->paragraphs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainingArticle)
  return target;
}

int TrainingArticle::ByteSize() const {
  int total_size = 0;

  // required string title = 1;
  if (has_title()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }
  // repeated .TrainingQuestionAnswer questions = 2;
  total_size += 1 * this->questions_size();
  for (int i = 0; i < this->questions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->questions(i));
  }

  // repeated .CandidateAnswer candidateAnswers = 3;
  total_size += 1 * this->candidateanswers_size();
  for (int i = 0; i < this->candidateanswers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->candidateanswers(i));
  }

  // repeated .TrainingParagraph paragraphs = 4;
  total_size += 1 * this->paragraphs_size();
  for (int i = 0; i < this->paragraphs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->paragraphs(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingArticle::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrainingArticle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainingArticle>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainingArticle::MergeFrom(const TrainingArticle& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  questions_.MergeFrom(from.questions_);
  candidateanswers_.MergeFrom(from.candidateanswers_);
  paragraphs_.MergeFrom(from.paragraphs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_title()) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TrainingArticle::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingArticle::CopyFrom(const TrainingArticle& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingArticle::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->questions())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->paragraphs())) return false;
  return true;
}

void TrainingArticle::Swap(TrainingArticle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingArticle::InternalSwap(TrainingArticle* other) {
  title_.Swap(&other->title_);
  questions_.UnsafeArenaSwap(&other->questions_);
  candidateanswers_.UnsafeArenaSwap(&other->candidateanswers_);
  paragraphs_.UnsafeArenaSwap(&other->paragraphs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainingArticle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingArticle_descriptor_;
  metadata.reflection = TrainingArticle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingArticle

// required string title = 1;
bool TrainingArticle::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TrainingArticle::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
void TrainingArticle::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
void TrainingArticle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
 const ::std::string& TrainingArticle::title() const {
  // @@protoc_insertion_point(field_get:TrainingArticle.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrainingArticle::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrainingArticle.title)
}
 void TrainingArticle::set_title(const char* value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrainingArticle.title)
}
 void TrainingArticle::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrainingArticle.title)
}
 ::std::string* TrainingArticle::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:TrainingArticle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TrainingArticle::release_title() {
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrainingArticle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:TrainingArticle.title)
}

// repeated .TrainingQuestionAnswer questions = 2;
int TrainingArticle::questions_size() const {
  return questions_.size();
}
void TrainingArticle::clear_questions() {
  questions_.Clear();
}
const ::TrainingQuestionAnswer& TrainingArticle::questions(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.questions)
  return questions_.Get(index);
}
::TrainingQuestionAnswer* TrainingArticle::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.questions)
  return questions_.Mutable(index);
}
::TrainingQuestionAnswer* TrainingArticle::add_questions() {
  // @@protoc_insertion_point(field_add:TrainingArticle.questions)
  return questions_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
TrainingArticle::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.questions)
  return &questions_;
}
const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
TrainingArticle::questions() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.questions)
  return questions_;
}

// repeated .CandidateAnswer candidateAnswers = 3;
int TrainingArticle::candidateanswers_size() const {
  return candidateanswers_.size();
}
void TrainingArticle::clear_candidateanswers() {
  candidateanswers_.Clear();
}
const ::CandidateAnswer& TrainingArticle::candidateanswers(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.candidateAnswers)
  return candidateanswers_.Get(index);
}
::CandidateAnswer* TrainingArticle::mutable_candidateanswers(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.candidateAnswers)
  return candidateanswers_.Mutable(index);
}
::CandidateAnswer* TrainingArticle::add_candidateanswers() {
  // @@protoc_insertion_point(field_add:TrainingArticle.candidateAnswers)
  return candidateanswers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
TrainingArticle::mutable_candidateanswers() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.candidateAnswers)
  return &candidateanswers_;
}
const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
TrainingArticle::candidateanswers() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.candidateAnswers)
  return candidateanswers_;
}

// repeated .TrainingParagraph paragraphs = 4;
int TrainingArticle::paragraphs_size() const {
  return paragraphs_.size();
}
void TrainingArticle::clear_paragraphs() {
  paragraphs_.Clear();
}
const ::TrainingParagraph& TrainingArticle::paragraphs(int index) const {
  // @@protoc_insertion_point(field_get:TrainingArticle.paragraphs)
  return paragraphs_.Get(index);
}
::TrainingParagraph* TrainingArticle::mutable_paragraphs(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingArticle.paragraphs)
  return paragraphs_.Mutable(index);
}
::TrainingParagraph* TrainingArticle::add_paragraphs() {
  // @@protoc_insertion_point(field_add:TrainingArticle.paragraphs)
  return paragraphs_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrainingParagraph >*
TrainingArticle::mutable_paragraphs() {
  // @@protoc_insertion_point(field_mutable_list:TrainingArticle.paragraphs)
  return &paragraphs_;
}
const ::google::protobuf::RepeatedPtrField< ::TrainingParagraph >&
TrainingArticle::paragraphs() const {
  // @@protoc_insertion_point(field_list:TrainingArticle.paragraphs)
  return paragraphs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingParagraph::kQuestionsFieldNumber;
const int TrainingParagraph::kCandidateAnswersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingParagraph::TrainingParagraph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrainingParagraph)
}

void TrainingParagraph::InitAsDefaultInstance() {
}

TrainingParagraph::TrainingParagraph(const TrainingParagraph& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TrainingParagraph)
}

void TrainingParagraph::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainingParagraph::~TrainingParagraph() {
  // @@protoc_insertion_point(destructor:TrainingParagraph)
  SharedDtor();
}

void TrainingParagraph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrainingParagraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingParagraph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingParagraph_descriptor_;
}

const TrainingParagraph& TrainingParagraph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

TrainingParagraph* TrainingParagraph::default_instance_ = NULL;

TrainingParagraph* TrainingParagraph::New(::google::protobuf::Arena* arena) const {
  TrainingParagraph* n = new TrainingParagraph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainingParagraph::Clear() {
  questions_.Clear();
  candidateanswers_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrainingParagraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrainingParagraph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TrainingQuestionAnswer questions = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_questions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_questions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_questions;
        if (input->ExpectTag(18)) goto parse_loop_candidateAnswers;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .CandidateAnswer candidateAnswers = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_candidateAnswers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_candidateanswers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_candidateAnswers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrainingParagraph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrainingParagraph)
  return false;
#undef DO_
}

void TrainingParagraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrainingParagraph)
  // repeated .TrainingQuestionAnswer questions = 1;
  for (unsigned int i = 0, n = this->questions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->questions(i), output);
  }

  // repeated .CandidateAnswer candidateAnswers = 2;
  for (unsigned int i = 0, n = this->candidateanswers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->candidateanswers(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrainingParagraph)
}

::google::protobuf::uint8* TrainingParagraph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainingParagraph)
  // repeated .TrainingQuestionAnswer questions = 1;
  for (unsigned int i = 0, n = this->questions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->questions(i), target);
  }

  // repeated .CandidateAnswer candidateAnswers = 2;
  for (unsigned int i = 0, n = this->candidateanswers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->candidateanswers(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainingParagraph)
  return target;
}

int TrainingParagraph::ByteSize() const {
  int total_size = 0;

  // repeated .TrainingQuestionAnswer questions = 1;
  total_size += 1 * this->questions_size();
  for (int i = 0; i < this->questions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->questions(i));
  }

  // repeated .CandidateAnswer candidateAnswers = 2;
  total_size += 1 * this->candidateanswers_size();
  for (int i = 0; i < this->candidateanswers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->candidateanswers(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingParagraph::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrainingParagraph* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainingParagraph>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainingParagraph::MergeFrom(const TrainingParagraph& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  questions_.MergeFrom(from.questions_);
  candidateanswers_.MergeFrom(from.candidateanswers_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TrainingParagraph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingParagraph::CopyFrom(const TrainingParagraph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingParagraph::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->questions())) return false;
  return true;
}

void TrainingParagraph::Swap(TrainingParagraph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingParagraph::InternalSwap(TrainingParagraph* other) {
  questions_.UnsafeArenaSwap(&other->questions_);
  candidateanswers_.UnsafeArenaSwap(&other->candidateanswers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainingParagraph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingParagraph_descriptor_;
  metadata.reflection = TrainingParagraph_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingParagraph

// repeated .TrainingQuestionAnswer questions = 1;
int TrainingParagraph::questions_size() const {
  return questions_.size();
}
void TrainingParagraph::clear_questions() {
  questions_.Clear();
}
const ::TrainingQuestionAnswer& TrainingParagraph::questions(int index) const {
  // @@protoc_insertion_point(field_get:TrainingParagraph.questions)
  return questions_.Get(index);
}
::TrainingQuestionAnswer* TrainingParagraph::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingParagraph.questions)
  return questions_.Mutable(index);
}
::TrainingQuestionAnswer* TrainingParagraph::add_questions() {
  // @@protoc_insertion_point(field_add:TrainingParagraph.questions)
  return questions_.Add();
}
::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >*
TrainingParagraph::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:TrainingParagraph.questions)
  return &questions_;
}
const ::google::protobuf::RepeatedPtrField< ::TrainingQuestionAnswer >&
TrainingParagraph::questions() const {
  // @@protoc_insertion_point(field_list:TrainingParagraph.questions)
  return questions_;
}

// repeated .CandidateAnswer candidateAnswers = 2;
int TrainingParagraph::candidateanswers_size() const {
  return candidateanswers_.size();
}
void TrainingParagraph::clear_candidateanswers() {
  candidateanswers_.Clear();
}
const ::CandidateAnswer& TrainingParagraph::candidateanswers(int index) const {
  // @@protoc_insertion_point(field_get:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Get(index);
}
::CandidateAnswer* TrainingParagraph::mutable_candidateanswers(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Mutable(index);
}
::CandidateAnswer* TrainingParagraph::add_candidateanswers() {
  // @@protoc_insertion_point(field_add:TrainingParagraph.candidateAnswers)
  return candidateanswers_.Add();
}
::google::protobuf::RepeatedPtrField< ::CandidateAnswer >*
TrainingParagraph::mutable_candidateanswers() {
  // @@protoc_insertion_point(field_mutable_list:TrainingParagraph.candidateAnswers)
  return &candidateanswers_;
}
const ::google::protobuf::RepeatedPtrField< ::CandidateAnswer >&
TrainingParagraph::candidateanswers() const {
  // @@protoc_insertion_point(field_list:TrainingParagraph.candidateAnswers)
  return candidateanswers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrainingQuestionAnswer::kIdFieldNumber;
const int TrainingQuestionAnswer::kCorrectAnswerIndexFieldNumber;
const int TrainingQuestionAnswer::kCandidateAnswerFeaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrainingQuestionAnswer::TrainingQuestionAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TrainingQuestionAnswer)
}

void TrainingQuestionAnswer::InitAsDefaultInstance() {
}

TrainingQuestionAnswer::TrainingQuestionAnswer(const TrainingQuestionAnswer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TrainingQuestionAnswer)
}

void TrainingQuestionAnswer::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  correctanswerindex_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TrainingQuestionAnswer::~TrainingQuestionAnswer() {
  // @@protoc_insertion_point(destructor:TrainingQuestionAnswer)
  SharedDtor();
}

void TrainingQuestionAnswer::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void TrainingQuestionAnswer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrainingQuestionAnswer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrainingQuestionAnswer_descriptor_;
}

const TrainingQuestionAnswer& TrainingQuestionAnswer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

TrainingQuestionAnswer* TrainingQuestionAnswer::default_instance_ = NULL;

TrainingQuestionAnswer* TrainingQuestionAnswer::New(::google::protobuf::Arena* arena) const {
  TrainingQuestionAnswer* n = new TrainingQuestionAnswer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrainingQuestionAnswer::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_id()) {
      id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    correctanswerindex_ = 0;
  }
  candidateanswerfeatures_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TrainingQuestionAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TrainingQuestionAnswer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "TrainingQuestionAnswer.id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_correctAnswerIndex;
        break;
      }

      // required int32 correctAnswerIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_correctAnswerIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &correctanswerindex_)));
          set_has_correctanswerindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_candidateAnswerFeatures;
        break;
      }

      // repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
      case 3: {
        if (tag == 26) {
         parse_candidateAnswerFeatures:
          DO_(input->IncrementRecursionDepth());
         parse_loop_candidateAnswerFeatures:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_candidateanswerfeatures()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_candidateAnswerFeatures;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TrainingQuestionAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TrainingQuestionAnswer)
  return false;
#undef DO_
}

void TrainingQuestionAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TrainingQuestionAnswer)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrainingQuestionAnswer.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // required int32 correctAnswerIndex = 2;
  if (has_correctanswerindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->correctanswerindex(), output);
  }

  // repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
  for (unsigned int i = 0, n = this->candidateanswerfeatures_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->candidateanswerfeatures(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TrainingQuestionAnswer)
}

::google::protobuf::uint8* TrainingQuestionAnswer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TrainingQuestionAnswer)
  // required string id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "TrainingQuestionAnswer.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // required int32 correctAnswerIndex = 2;
  if (has_correctanswerindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->correctanswerindex(), target);
  }

  // repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
  for (unsigned int i = 0, n = this->candidateanswerfeatures_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->candidateanswerfeatures(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TrainingQuestionAnswer)
  return target;
}

int TrainingQuestionAnswer::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  if (has_correctanswerindex()) {
    // required int32 correctAnswerIndex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->correctanswerindex());
  }

  return total_size;
}
int TrainingQuestionAnswer::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());

    // required int32 correctAnswerIndex = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->correctanswerindex());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
  total_size += 1 * this->candidateanswerfeatures_size();
  for (int i = 0; i < this->candidateanswerfeatures_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->candidateanswerfeatures(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrainingQuestionAnswer::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TrainingQuestionAnswer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrainingQuestionAnswer>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TrainingQuestionAnswer::MergeFrom(const TrainingQuestionAnswer& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  candidateanswerfeatures_.MergeFrom(from.candidateanswerfeatures_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_has_id();
      id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
    }
    if (from.has_correctanswerindex()) {
      set_correctanswerindex(from.correctanswerindex());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void TrainingQuestionAnswer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrainingQuestionAnswer::CopyFrom(const TrainingQuestionAnswer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrainingQuestionAnswer::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void TrainingQuestionAnswer::Swap(TrainingQuestionAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrainingQuestionAnswer::InternalSwap(TrainingQuestionAnswer* other) {
  id_.Swap(&other->id_);
  std::swap(correctanswerindex_, other->correctanswerindex_);
  candidateanswerfeatures_.UnsafeArenaSwap(&other->candidateanswerfeatures_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrainingQuestionAnswer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrainingQuestionAnswer_descriptor_;
  metadata.reflection = TrainingQuestionAnswer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainingQuestionAnswer

// required string id = 1;
bool TrainingQuestionAnswer::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TrainingQuestionAnswer::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void TrainingQuestionAnswer::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void TrainingQuestionAnswer::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
 const ::std::string& TrainingQuestionAnswer::id() const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrainingQuestionAnswer::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TrainingQuestionAnswer.id)
}
 void TrainingQuestionAnswer::set_id(const char* value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TrainingQuestionAnswer.id)
}
 void TrainingQuestionAnswer::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TrainingQuestionAnswer.id)
}
 ::std::string* TrainingQuestionAnswer::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:TrainingQuestionAnswer.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* TrainingQuestionAnswer::release_id() {
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void TrainingQuestionAnswer::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:TrainingQuestionAnswer.id)
}

// required int32 correctAnswerIndex = 2;
bool TrainingQuestionAnswer::has_correctanswerindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TrainingQuestionAnswer::set_has_correctanswerindex() {
  _has_bits_[0] |= 0x00000002u;
}
void TrainingQuestionAnswer::clear_has_correctanswerindex() {
  _has_bits_[0] &= ~0x00000002u;
}
void TrainingQuestionAnswer::clear_correctanswerindex() {
  correctanswerindex_ = 0;
  clear_has_correctanswerindex();
}
 ::google::protobuf::int32 TrainingQuestionAnswer::correctanswerindex() const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.correctAnswerIndex)
  return correctanswerindex_;
}
 void TrainingQuestionAnswer::set_correctanswerindex(::google::protobuf::int32 value) {
  set_has_correctanswerindex();
  correctanswerindex_ = value;
  // @@protoc_insertion_point(field_set:TrainingQuestionAnswer.correctAnswerIndex)
}

// repeated .CandidateAnswerFeatures candidateAnswerFeatures = 3;
int TrainingQuestionAnswer::candidateanswerfeatures_size() const {
  return candidateanswerfeatures_.size();
}
void TrainingQuestionAnswer::clear_candidateanswerfeatures() {
  candidateanswerfeatures_.Clear();
}
const ::CandidateAnswerFeatures& TrainingQuestionAnswer::candidateanswerfeatures(int index) const {
  // @@protoc_insertion_point(field_get:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Get(index);
}
::CandidateAnswerFeatures* TrainingQuestionAnswer::mutable_candidateanswerfeatures(int index) {
  // @@protoc_insertion_point(field_mutable:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Mutable(index);
}
::CandidateAnswerFeatures* TrainingQuestionAnswer::add_candidateanswerfeatures() {
  // @@protoc_insertion_point(field_add:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_.Add();
}
::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >*
TrainingQuestionAnswer::mutable_candidateanswerfeatures() {
  // @@protoc_insertion_point(field_mutable_list:TrainingQuestionAnswer.candidateAnswerFeatures)
  return &candidateanswerfeatures_;
}
const ::google::protobuf::RepeatedPtrField< ::CandidateAnswerFeatures >&
TrainingQuestionAnswer::candidateanswerfeatures() const {
  // @@protoc_insertion_point(field_list:TrainingQuestionAnswer.candidateAnswerFeatures)
  return candidateanswerfeatures_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CandidateAnswer::kParagraphIndexFieldNumber;
const int CandidateAnswer::kSentenceIndexFieldNumber;
const int CandidateAnswer::kSpanBeginIndexFieldNumber;
const int CandidateAnswer::kSpanLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CandidateAnswer::CandidateAnswer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CandidateAnswer)
}

void CandidateAnswer::InitAsDefaultInstance() {
}

CandidateAnswer::CandidateAnswer(const CandidateAnswer& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CandidateAnswer)
}

void CandidateAnswer::SharedCtor() {
  _cached_size_ = 0;
  paragraphindex_ = 0;
  sentenceindex_ = 0;
  spanbeginindex_ = 0;
  spanlength_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CandidateAnswer::~CandidateAnswer() {
  // @@protoc_insertion_point(destructor:CandidateAnswer)
  SharedDtor();
}

void CandidateAnswer::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CandidateAnswer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CandidateAnswer::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CandidateAnswer_descriptor_;
}

const CandidateAnswer& CandidateAnswer::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

CandidateAnswer* CandidateAnswer::default_instance_ = NULL;

CandidateAnswer* CandidateAnswer::New(::google::protobuf::Arena* arena) const {
  CandidateAnswer* n = new CandidateAnswer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CandidateAnswer::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CandidateAnswer*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(paragraphindex_, spanlength_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CandidateAnswer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CandidateAnswer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 paragraphIndex = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &paragraphindex_)));
          set_has_paragraphindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_sentenceIndex;
        break;
      }

      // optional int32 sentenceIndex = 2;
      case 2: {
        if (tag == 16) {
         parse_sentenceIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sentenceindex_)));
          set_has_sentenceindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_spanBeginIndex;
        break;
      }

      // optional int32 spanBeginIndex = 3;
      case 3: {
        if (tag == 24) {
         parse_spanBeginIndex:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spanbeginindex_)));
          set_has_spanbeginindex();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_spanLength;
        break;
      }

      // optional int32 spanLength = 4;
      case 4: {
        if (tag == 32) {
         parse_spanLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &spanlength_)));
          set_has_spanlength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CandidateAnswer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CandidateAnswer)
  return false;
#undef DO_
}

void CandidateAnswer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CandidateAnswer)
  // optional int32 paragraphIndex = 1;
  if (has_paragraphindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->paragraphindex(), output);
  }

  // optional int32 sentenceIndex = 2;
  if (has_sentenceindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sentenceindex(), output);
  }

  // optional int32 spanBeginIndex = 3;
  if (has_spanbeginindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->spanbeginindex(), output);
  }

  // optional int32 spanLength = 4;
  if (has_spanlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->spanlength(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CandidateAnswer)
}

::google::protobuf::uint8* CandidateAnswer::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CandidateAnswer)
  // optional int32 paragraphIndex = 1;
  if (has_paragraphindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->paragraphindex(), target);
  }

  // optional int32 sentenceIndex = 2;
  if (has_sentenceindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sentenceindex(), target);
  }

  // optional int32 spanBeginIndex = 3;
  if (has_spanbeginindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->spanbeginindex(), target);
  }

  // optional int32 spanLength = 4;
  if (has_spanlength()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->spanlength(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CandidateAnswer)
  return target;
}

int CandidateAnswer::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional int32 paragraphIndex = 1;
    if (has_paragraphindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->paragraphindex());
    }

    // optional int32 sentenceIndex = 2;
    if (has_sentenceindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->sentenceindex());
    }

    // optional int32 spanBeginIndex = 3;
    if (has_spanbeginindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->spanbeginindex());
    }

    // optional int32 spanLength = 4;
    if (has_spanlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->spanlength());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CandidateAnswer::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CandidateAnswer* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CandidateAnswer>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CandidateAnswer::MergeFrom(const CandidateAnswer& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_paragraphindex()) {
      set_paragraphindex(from.paragraphindex());
    }
    if (from.has_sentenceindex()) {
      set_sentenceindex(from.sentenceindex());
    }
    if (from.has_spanbeginindex()) {
      set_spanbeginindex(from.spanbeginindex());
    }
    if (from.has_spanlength()) {
      set_spanlength(from.spanlength());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CandidateAnswer::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CandidateAnswer::CopyFrom(const CandidateAnswer& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CandidateAnswer::IsInitialized() const {

  return true;
}

void CandidateAnswer::Swap(CandidateAnswer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CandidateAnswer::InternalSwap(CandidateAnswer* other) {
  std::swap(paragraphindex_, other->paragraphindex_);
  std::swap(sentenceindex_, other->sentenceindex_);
  std::swap(spanbeginindex_, other->spanbeginindex_);
  std::swap(spanlength_, other->spanlength_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CandidateAnswer::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CandidateAnswer_descriptor_;
  metadata.reflection = CandidateAnswer_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CandidateAnswer

// optional int32 paragraphIndex = 1;
bool CandidateAnswer::has_paragraphindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CandidateAnswer::set_has_paragraphindex() {
  _has_bits_[0] |= 0x00000001u;
}
void CandidateAnswer::clear_has_paragraphindex() {
  _has_bits_[0] &= ~0x00000001u;
}
void CandidateAnswer::clear_paragraphindex() {
  paragraphindex_ = 0;
  clear_has_paragraphindex();
}
 ::google::protobuf::int32 CandidateAnswer::paragraphindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.paragraphIndex)
  return paragraphindex_;
}
 void CandidateAnswer::set_paragraphindex(::google::protobuf::int32 value) {
  set_has_paragraphindex();
  paragraphindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.paragraphIndex)
}

// optional int32 sentenceIndex = 2;
bool CandidateAnswer::has_sentenceindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CandidateAnswer::set_has_sentenceindex() {
  _has_bits_[0] |= 0x00000002u;
}
void CandidateAnswer::clear_has_sentenceindex() {
  _has_bits_[0] &= ~0x00000002u;
}
void CandidateAnswer::clear_sentenceindex() {
  sentenceindex_ = 0;
  clear_has_sentenceindex();
}
 ::google::protobuf::int32 CandidateAnswer::sentenceindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.sentenceIndex)
  return sentenceindex_;
}
 void CandidateAnswer::set_sentenceindex(::google::protobuf::int32 value) {
  set_has_sentenceindex();
  sentenceindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.sentenceIndex)
}

// optional int32 spanBeginIndex = 3;
bool CandidateAnswer::has_spanbeginindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CandidateAnswer::set_has_spanbeginindex() {
  _has_bits_[0] |= 0x00000004u;
}
void CandidateAnswer::clear_has_spanbeginindex() {
  _has_bits_[0] &= ~0x00000004u;
}
void CandidateAnswer::clear_spanbeginindex() {
  spanbeginindex_ = 0;
  clear_has_spanbeginindex();
}
 ::google::protobuf::int32 CandidateAnswer::spanbeginindex() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.spanBeginIndex)
  return spanbeginindex_;
}
 void CandidateAnswer::set_spanbeginindex(::google::protobuf::int32 value) {
  set_has_spanbeginindex();
  spanbeginindex_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.spanBeginIndex)
}

// optional int32 spanLength = 4;
bool CandidateAnswer::has_spanlength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CandidateAnswer::set_has_spanlength() {
  _has_bits_[0] |= 0x00000008u;
}
void CandidateAnswer::clear_has_spanlength() {
  _has_bits_[0] &= ~0x00000008u;
}
void CandidateAnswer::clear_spanlength() {
  spanlength_ = 0;
  clear_has_spanlength();
}
 ::google::protobuf::int32 CandidateAnswer::spanlength() const {
  // @@protoc_insertion_point(field_get:CandidateAnswer.spanLength)
  return spanlength_;
}
 void CandidateAnswer::set_spanlength(::google::protobuf::int32 value) {
  set_has_spanlength();
  spanlength_ = value;
  // @@protoc_insertion_point(field_set:CandidateAnswer.spanLength)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CandidateAnswerFeatures::kIndicesFieldNumber;
const int CandidateAnswerFeatures::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CandidateAnswerFeatures::CandidateAnswerFeatures()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:CandidateAnswerFeatures)
}

void CandidateAnswerFeatures::InitAsDefaultInstance() {
}

CandidateAnswerFeatures::CandidateAnswerFeatures(const CandidateAnswerFeatures& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:CandidateAnswerFeatures)
}

void CandidateAnswerFeatures::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CandidateAnswerFeatures::~CandidateAnswerFeatures() {
  // @@protoc_insertion_point(destructor:CandidateAnswerFeatures)
  SharedDtor();
}

void CandidateAnswerFeatures::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CandidateAnswerFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CandidateAnswerFeatures::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CandidateAnswerFeatures_descriptor_;
}

const CandidateAnswerFeatures& CandidateAnswerFeatures::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

CandidateAnswerFeatures* CandidateAnswerFeatures::default_instance_ = NULL;

CandidateAnswerFeatures* CandidateAnswerFeatures::New(::google::protobuf::Arena* arena) const {
  CandidateAnswerFeatures* n = new CandidateAnswerFeatures;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CandidateAnswerFeatures::Clear() {
  indices_.Clear();
  values_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool CandidateAnswerFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:CandidateAnswerFeatures)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 indices = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_indices())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_indices())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_values;
        break;
      }

      // repeated float values = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_values:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_values())));
        } else if (tag == 21) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 18, input, this->mutable_values())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:CandidateAnswerFeatures)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:CandidateAnswerFeatures)
  return false;
#undef DO_
}

void CandidateAnswerFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:CandidateAnswerFeatures)
  // repeated int32 indices = 1 [packed = true];
  if (this->indices_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_indices_cached_byte_size_);
  }
  for (int i = 0; i < this->indices_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->indices(i), output);
  }

  // repeated float values = 2 [packed = true];
  if (this->values_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_values_cached_byte_size_);
  }
  for (int i = 0; i < this->values_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->values(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:CandidateAnswerFeatures)
}

::google::protobuf::uint8* CandidateAnswerFeatures::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:CandidateAnswerFeatures)
  // repeated int32 indices = 1 [packed = true];
  if (this->indices_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _indices_cached_byte_size_, target);
  }
  for (int i = 0; i < this->indices_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->indices(i), target);
  }

  // repeated float values = 2 [packed = true];
  if (this->values_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _values_cached_byte_size_, target);
  }
  for (int i = 0; i < this->values_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->values(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CandidateAnswerFeatures)
  return target;
}

int CandidateAnswerFeatures::ByteSize() const {
  int total_size = 0;

  // repeated int32 indices = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->indices_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->indices(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _indices_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float values = 2 [packed = true];
  {
    int data_size = 0;
    data_size = 4 * this->values_size();
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _values_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CandidateAnswerFeatures::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CandidateAnswerFeatures* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CandidateAnswerFeatures>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CandidateAnswerFeatures::MergeFrom(const CandidateAnswerFeatures& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  indices_.MergeFrom(from.indices_);
  values_.MergeFrom(from.values_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void CandidateAnswerFeatures::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CandidateAnswerFeatures::CopyFrom(const CandidateAnswerFeatures& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CandidateAnswerFeatures::IsInitialized() const {

  return true;
}

void CandidateAnswerFeatures::Swap(CandidateAnswerFeatures* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CandidateAnswerFeatures::InternalSwap(CandidateAnswerFeatures* other) {
  indices_.UnsafeArenaSwap(&other->indices_);
  values_.UnsafeArenaSwap(&other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CandidateAnswerFeatures::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CandidateAnswerFeatures_descriptor_;
  metadata.reflection = CandidateAnswerFeatures_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CandidateAnswerFeatures

// repeated int32 indices = 1 [packed = true];
int CandidateAnswerFeatures::indices_size() const {
  return indices_.size();
}
void CandidateAnswerFeatures::clear_indices() {
  indices_.Clear();
}
 ::google::protobuf::int32 CandidateAnswerFeatures::indices(int index) const {
  // @@protoc_insertion_point(field_get:CandidateAnswerFeatures.indices)
  return indices_.Get(index);
}
 void CandidateAnswerFeatures::set_indices(int index, ::google::protobuf::int32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:CandidateAnswerFeatures.indices)
}
 void CandidateAnswerFeatures::add_indices(::google::protobuf::int32 value) {
  indices_.Add(value);
  // @@protoc_insertion_point(field_add:CandidateAnswerFeatures.indices)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CandidateAnswerFeatures::indices() const {
  // @@protoc_insertion_point(field_list:CandidateAnswerFeatures.indices)
  return indices_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CandidateAnswerFeatures::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:CandidateAnswerFeatures.indices)
  return &indices_;
}

// repeated float values = 2 [packed = true];
int CandidateAnswerFeatures::values_size() const {
  return values_.size();
}
void CandidateAnswerFeatures::clear_values() {
  values_.Clear();
}
 float CandidateAnswerFeatures::values(int index) const {
  // @@protoc_insertion_point(field_get:CandidateAnswerFeatures.values)
  return values_.Get(index);
}
 void CandidateAnswerFeatures::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:CandidateAnswerFeatures.values)
}
 void CandidateAnswerFeatures::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:CandidateAnswerFeatures.values)
}
 const ::google::protobuf::RepeatedField< float >&
CandidateAnswerFeatures::values() const {
  // @@protoc_insertion_point(field_list:CandidateAnswerFeatures.values)
  return values_;
}
 ::google::protobuf::RepeatedField< float >*
CandidateAnswerFeatures::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:CandidateAnswerFeatures.values)
  return &values_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnigramWeight::kLemmaFieldNumber;
const int UnigramWeight::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnigramWeight::UnigramWeight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:UnigramWeight)
}

void UnigramWeight::InitAsDefaultInstance() {
}

UnigramWeight::UnigramWeight(const UnigramWeight& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:UnigramWeight)
}

void UnigramWeight::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lemma_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

UnigramWeight::~UnigramWeight() {
  // @@protoc_insertion_point(destructor:UnigramWeight)
  SharedDtor();
}

void UnigramWeight::SharedDtor() {
  lemma_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void UnigramWeight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnigramWeight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnigramWeight_descriptor_;
}

const UnigramWeight& UnigramWeight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

UnigramWeight* UnigramWeight::default_instance_ = NULL;

UnigramWeight* UnigramWeight::New(::google::protobuf::Arena* arena) const {
  UnigramWeight* n = new UnigramWeight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnigramWeight::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_lemma()) {
      lemma_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool UnigramWeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:UnigramWeight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string lemma = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lemma()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lemma().data(), this->lemma().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "UnigramWeight.lemma");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_weight;
        break;
      }

      // required float weight = 2;
      case 2: {
        if (tag == 21) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:UnigramWeight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:UnigramWeight)
  return false;
#undef DO_
}

void UnigramWeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:UnigramWeight)
  // required string lemma = 1;
  if (has_lemma()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma().data(), this->lemma().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnigramWeight.lemma");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lemma(), output);
  }

  // required float weight = 2;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:UnigramWeight)
}

::google::protobuf::uint8* UnigramWeight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:UnigramWeight)
  // required string lemma = 1;
  if (has_lemma()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma().data(), this->lemma().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "UnigramWeight.lemma");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lemma(), target);
  }

  // required float weight = 2;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UnigramWeight)
  return target;
}

int UnigramWeight::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_lemma()) {
    // required string lemma = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma());
  }

  if (has_weight()) {
    // required float weight = 2;
    total_size += 1 + 4;
  }

  return total_size;
}
int UnigramWeight::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string lemma = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma());

    // required float weight = 2;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnigramWeight::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnigramWeight* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const UnigramWeight>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void UnigramWeight::MergeFrom(const UnigramWeight& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lemma()) {
      set_has_lemma();
      lemma_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lemma_);
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void UnigramWeight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnigramWeight::CopyFrom(const UnigramWeight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnigramWeight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void UnigramWeight::Swap(UnigramWeight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnigramWeight::InternalSwap(UnigramWeight* other) {
  lemma_.Swap(&other->lemma_);
  std::swap(weight_, other->weight_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnigramWeight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnigramWeight_descriptor_;
  metadata.reflection = UnigramWeight_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnigramWeight

// required string lemma = 1;
bool UnigramWeight::has_lemma() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnigramWeight::set_has_lemma() {
  _has_bits_[0] |= 0x00000001u;
}
void UnigramWeight::clear_has_lemma() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnigramWeight::clear_lemma() {
  lemma_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma();
}
 const ::std::string& UnigramWeight::lemma() const {
  // @@protoc_insertion_point(field_get:UnigramWeight.lemma)
  return lemma_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnigramWeight::set_lemma(const ::std::string& value) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:UnigramWeight.lemma)
}
 void UnigramWeight::set_lemma(const char* value) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:UnigramWeight.lemma)
}
 void UnigramWeight::set_lemma(const char* value, size_t size) {
  set_has_lemma();
  lemma_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:UnigramWeight.lemma)
}
 ::std::string* UnigramWeight::mutable_lemma() {
  set_has_lemma();
  // @@protoc_insertion_point(field_mutable:UnigramWeight.lemma)
  return lemma_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* UnigramWeight::release_lemma() {
  clear_has_lemma();
  return lemma_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void UnigramWeight::set_allocated_lemma(::std::string* lemma) {
  if (lemma != NULL) {
    set_has_lemma();
  } else {
    clear_has_lemma();
  }
  lemma_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma);
  // @@protoc_insertion_point(field_set_allocated:UnigramWeight.lemma)
}

// required float weight = 2;
bool UnigramWeight::has_weight() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UnigramWeight::set_has_weight() {
  _has_bits_[0] |= 0x00000002u;
}
void UnigramWeight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000002u;
}
void UnigramWeight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
 float UnigramWeight::weight() const {
  // @@protoc_insertion_point(field_get:UnigramWeight.weight)
  return weight_;
}
 void UnigramWeight::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:UnigramWeight.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BigramWeight::kLemma1FieldNumber;
const int BigramWeight::kLemma2FieldNumber;
const int BigramWeight::kWeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BigramWeight::BigramWeight()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BigramWeight)
}

void BigramWeight::InitAsDefaultInstance() {
}

BigramWeight::BigramWeight(const BigramWeight& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BigramWeight)
}

void BigramWeight::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  lemma1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lemma2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  weight_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BigramWeight::~BigramWeight() {
  // @@protoc_insertion_point(destructor:BigramWeight)
  SharedDtor();
}

void BigramWeight::SharedDtor() {
  lemma1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lemma2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BigramWeight::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BigramWeight::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BigramWeight_descriptor_;
}

const BigramWeight& BigramWeight::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

BigramWeight* BigramWeight::default_instance_ = NULL;

BigramWeight* BigramWeight::New(::google::protobuf::Arena* arena) const {
  BigramWeight* n = new BigramWeight;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BigramWeight::Clear() {
  if (_has_bits_[0 / 32] & 7u) {
    if (has_lemma1()) {
      lemma1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_lemma2()) {
      lemma2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    weight_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BigramWeight::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BigramWeight)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string lemma1 = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lemma1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lemma1().data(), this->lemma1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BigramWeight.lemma1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lemma2;
        break;
      }

      // required string lemma2 = 2;
      case 2: {
        if (tag == 18) {
         parse_lemma2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lemma2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lemma2().data(), this->lemma2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BigramWeight.lemma2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_weight;
        break;
      }

      // required float weight = 3;
      case 3: {
        if (tag == 29) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BigramWeight)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BigramWeight)
  return false;
#undef DO_
}

void BigramWeight::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BigramWeight)
  // required string lemma1 = 1;
  if (has_lemma1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma1().data(), this->lemma1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigramWeight.lemma1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lemma1(), output);
  }

  // required string lemma2 = 2;
  if (has_lemma2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma2().data(), this->lemma2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigramWeight.lemma2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lemma2(), output);
  }

  // required float weight = 3;
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->weight(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BigramWeight)
}

::google::protobuf::uint8* BigramWeight::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BigramWeight)
  // required string lemma1 = 1;
  if (has_lemma1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma1().data(), this->lemma1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigramWeight.lemma1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lemma1(), target);
  }

  // required string lemma2 = 2;
  if (has_lemma2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lemma2().data(), this->lemma2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BigramWeight.lemma2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lemma2(), target);
  }

  // required float weight = 3;
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->weight(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BigramWeight)
  return target;
}

int BigramWeight::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_lemma1()) {
    // required string lemma1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma1());
  }

  if (has_lemma2()) {
    // required string lemma2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma2());
  }

  if (has_weight()) {
    // required float weight = 3;
    total_size += 1 + 4;
  }

  return total_size;
}
int BigramWeight::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string lemma1 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma1());

    // required string lemma2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lemma2());

    // required float weight = 3;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BigramWeight::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BigramWeight* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BigramWeight>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BigramWeight::MergeFrom(const BigramWeight& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_lemma1()) {
      set_has_lemma1();
      lemma1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lemma1_);
    }
    if (from.has_lemma2()) {
      set_has_lemma2();
      lemma2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lemma2_);
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BigramWeight::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BigramWeight::CopyFrom(const BigramWeight& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BigramWeight::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void BigramWeight::Swap(BigramWeight* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BigramWeight::InternalSwap(BigramWeight* other) {
  lemma1_.Swap(&other->lemma1_);
  lemma2_.Swap(&other->lemma2_);
  std::swap(weight_, other->weight_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BigramWeight::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BigramWeight_descriptor_;
  metadata.reflection = BigramWeight_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BigramWeight

// required string lemma1 = 1;
bool BigramWeight::has_lemma1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BigramWeight::set_has_lemma1() {
  _has_bits_[0] |= 0x00000001u;
}
void BigramWeight::clear_has_lemma1() {
  _has_bits_[0] &= ~0x00000001u;
}
void BigramWeight::clear_lemma1() {
  lemma1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma1();
}
 const ::std::string& BigramWeight::lemma1() const {
  // @@protoc_insertion_point(field_get:BigramWeight.lemma1)
  return lemma1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BigramWeight::set_lemma1(const ::std::string& value) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigramWeight.lemma1)
}
 void BigramWeight::set_lemma1(const char* value) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigramWeight.lemma1)
}
 void BigramWeight::set_lemma1(const char* value, size_t size) {
  set_has_lemma1();
  lemma1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigramWeight.lemma1)
}
 ::std::string* BigramWeight::mutable_lemma1() {
  set_has_lemma1();
  // @@protoc_insertion_point(field_mutable:BigramWeight.lemma1)
  return lemma1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BigramWeight::release_lemma1() {
  clear_has_lemma1();
  return lemma1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BigramWeight::set_allocated_lemma1(::std::string* lemma1) {
  if (lemma1 != NULL) {
    set_has_lemma1();
  } else {
    clear_has_lemma1();
  }
  lemma1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma1);
  // @@protoc_insertion_point(field_set_allocated:BigramWeight.lemma1)
}

// required string lemma2 = 2;
bool BigramWeight::has_lemma2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BigramWeight::set_has_lemma2() {
  _has_bits_[0] |= 0x00000002u;
}
void BigramWeight::clear_has_lemma2() {
  _has_bits_[0] &= ~0x00000002u;
}
void BigramWeight::clear_lemma2() {
  lemma2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lemma2();
}
 const ::std::string& BigramWeight::lemma2() const {
  // @@protoc_insertion_point(field_get:BigramWeight.lemma2)
  return lemma2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BigramWeight::set_lemma2(const ::std::string& value) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BigramWeight.lemma2)
}
 void BigramWeight::set_lemma2(const char* value) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BigramWeight.lemma2)
}
 void BigramWeight::set_lemma2(const char* value, size_t size) {
  set_has_lemma2();
  lemma2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BigramWeight.lemma2)
}
 ::std::string* BigramWeight::mutable_lemma2() {
  set_has_lemma2();
  // @@protoc_insertion_point(field_mutable:BigramWeight.lemma2)
  return lemma2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BigramWeight::release_lemma2() {
  clear_has_lemma2();
  return lemma2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BigramWeight::set_allocated_lemma2(::std::string* lemma2) {
  if (lemma2 != NULL) {
    set_has_lemma2();
  } else {
    clear_has_lemma2();
  }
  lemma2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lemma2);
  // @@protoc_insertion_point(field_set_allocated:BigramWeight.lemma2)
}

// required float weight = 3;
bool BigramWeight::has_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void BigramWeight::set_has_weight() {
  _has_bits_[0] |= 0x00000004u;
}
void BigramWeight::clear_has_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
void BigramWeight::clear_weight() {
  weight_ = 0;
  clear_has_weight();
}
 float BigramWeight::weight() const {
  // @@protoc_insertion_point(field_get:BigramWeight.weight)
  return weight_;
}
 void BigramWeight::set_weight(float value) {
  set_has_weight();
  weight_ = value;
  // @@protoc_insertion_point(field_set:BigramWeight.weight)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DictionaryEntry::kNameFieldNumber;
const int DictionaryEntry::kIndexFieldNumber;
const int DictionaryEntry::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DictionaryEntry::DictionaryEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:DictionaryEntry)
}

void DictionaryEntry::InitAsDefaultInstance() {
}

DictionaryEntry::DictionaryEntry(const DictionaryEntry& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:DictionaryEntry)
}

void DictionaryEntry::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  index_ = 0;
  count_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DictionaryEntry::~DictionaryEntry() {
  // @@protoc_insertion_point(destructor:DictionaryEntry)
  SharedDtor();
}

void DictionaryEntry::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void DictionaryEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DictionaryEntry::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DictionaryEntry_descriptor_;
}

const DictionaryEntry& DictionaryEntry::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

DictionaryEntry* DictionaryEntry::default_instance_ = NULL;

DictionaryEntry* DictionaryEntry::New(::google::protobuf::Arena* arena) const {
  DictionaryEntry* n = new DictionaryEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DictionaryEntry::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<DictionaryEntry*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(count_, index_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DictionaryEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DictionaryEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "DictionaryEntry.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_index;
        break;
      }

      // required int32 index = 2;
      case 2: {
        if (tag == 16) {
         parse_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
          set_has_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_count;
        break;
      }

      // required int64 count = 3;
      case 3: {
        if (tag == 24) {
         parse_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &count_)));
          set_has_count();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DictionaryEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DictionaryEntry)
  return false;
#undef DO_
}

void DictionaryEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DictionaryEntry)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DictionaryEntry.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 index = 2;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->index(), output);
  }

  // required int64 count = 3;
  if (has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:DictionaryEntry)
}

::google::protobuf::uint8* DictionaryEntry::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:DictionaryEntry)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "DictionaryEntry.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 index = 2;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->index(), target);
  }

  // required int64 count = 3;
  if (has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DictionaryEntry)
  return target;
}

int DictionaryEntry::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_index()) {
    // required int32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_count()) {
    // required int64 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());
  }

  return total_size;
}
int DictionaryEntry::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 index = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int64 count = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->count());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DictionaryEntry::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DictionaryEntry* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DictionaryEntry>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DictionaryEntry::MergeFrom(const DictionaryEntry& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_count()) {
      set_count(from.count());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DictionaryEntry::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DictionaryEntry::CopyFrom(const DictionaryEntry& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictionaryEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void DictionaryEntry::Swap(DictionaryEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DictionaryEntry::InternalSwap(DictionaryEntry* other) {
  name_.Swap(&other->name_);
  std::swap(index_, other->index_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DictionaryEntry::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DictionaryEntry_descriptor_;
  metadata.reflection = DictionaryEntry_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DictionaryEntry

// required string name = 1;
bool DictionaryEntry::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DictionaryEntry::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void DictionaryEntry::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void DictionaryEntry::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& DictionaryEntry::name() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DictionaryEntry::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DictionaryEntry.name)
}
 void DictionaryEntry::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DictionaryEntry.name)
}
 void DictionaryEntry::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DictionaryEntry.name)
}
 ::std::string* DictionaryEntry::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:DictionaryEntry.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* DictionaryEntry::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void DictionaryEntry::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:DictionaryEntry.name)
}

// required int32 index = 2;
bool DictionaryEntry::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DictionaryEntry::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
void DictionaryEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void DictionaryEntry::clear_index() {
  index_ = 0;
  clear_has_index();
}
 ::google::protobuf::int32 DictionaryEntry::index() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.index)
  return index_;
}
 void DictionaryEntry::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:DictionaryEntry.index)
}

// required int64 count = 3;
bool DictionaryEntry::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DictionaryEntry::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
void DictionaryEntry::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void DictionaryEntry::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
 ::google::protobuf::int64 DictionaryEntry::count() const {
  // @@protoc_insertion_point(field_get:DictionaryEntry.count)
  return count_;
}
 void DictionaryEntry::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:DictionaryEntry.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BucketizerConfig_FeatureBucketizerConfig::kNameFieldNumber;
const int BucketizerConfig_FeatureBucketizerConfig::kLowerBoundsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BucketizerConfig_FeatureBucketizerConfig::BucketizerConfig_FeatureBucketizerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BucketizerConfig.FeatureBucketizerConfig)
}

void BucketizerConfig_FeatureBucketizerConfig::InitAsDefaultInstance() {
}

BucketizerConfig_FeatureBucketizerConfig::BucketizerConfig_FeatureBucketizerConfig(const BucketizerConfig_FeatureBucketizerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BucketizerConfig.FeatureBucketizerConfig)
}

void BucketizerConfig_FeatureBucketizerConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BucketizerConfig_FeatureBucketizerConfig::~BucketizerConfig_FeatureBucketizerConfig() {
  // @@protoc_insertion_point(destructor:BucketizerConfig.FeatureBucketizerConfig)
  SharedDtor();
}

void BucketizerConfig_FeatureBucketizerConfig::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BucketizerConfig_FeatureBucketizerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BucketizerConfig_FeatureBucketizerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BucketizerConfig_FeatureBucketizerConfig_descriptor_;
}

const BucketizerConfig_FeatureBucketizerConfig& BucketizerConfig_FeatureBucketizerConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig_FeatureBucketizerConfig::default_instance_ = NULL;

BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig_FeatureBucketizerConfig::New(::google::protobuf::Arena* arena) const {
  BucketizerConfig_FeatureBucketizerConfig* n = new BucketizerConfig_FeatureBucketizerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BucketizerConfig_FeatureBucketizerConfig::Clear() {
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  lower_bounds_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BucketizerConfig_FeatureBucketizerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BucketizerConfig.FeatureBucketizerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "BucketizerConfig.FeatureBucketizerConfig.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_lower_bounds;
        break;
      }

      // repeated float lower_bounds = 2;
      case 2: {
        if (tag == 21) {
         parse_lower_bounds:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 21, input, this->mutable_lower_bounds())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_lower_bounds())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_lower_bounds;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BucketizerConfig.FeatureBucketizerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BucketizerConfig.FeatureBucketizerConfig)
  return false;
#undef DO_
}

void BucketizerConfig_FeatureBucketizerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BucketizerConfig.FeatureBucketizerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BucketizerConfig.FeatureBucketizerConfig.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated float lower_bounds = 2;
  for (int i = 0; i < this->lower_bounds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      2, this->lower_bounds(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BucketizerConfig.FeatureBucketizerConfig)
}

::google::protobuf::uint8* BucketizerConfig_FeatureBucketizerConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BucketizerConfig.FeatureBucketizerConfig)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "BucketizerConfig.FeatureBucketizerConfig.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated float lower_bounds = 2;
  for (int i = 0; i < this->lower_bounds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(2, this->lower_bounds(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BucketizerConfig.FeatureBucketizerConfig)
  return target;
}

int BucketizerConfig_FeatureBucketizerConfig::ByteSize() const {
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated float lower_bounds = 2;
  {
    int data_size = 0;
    data_size = 4 * this->lower_bounds_size();
    total_size += 1 * this->lower_bounds_size() + data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BucketizerConfig_FeatureBucketizerConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BucketizerConfig_FeatureBucketizerConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BucketizerConfig_FeatureBucketizerConfig>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BucketizerConfig_FeatureBucketizerConfig::MergeFrom(const BucketizerConfig_FeatureBucketizerConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  lower_bounds_.MergeFrom(from.lower_bounds_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BucketizerConfig_FeatureBucketizerConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketizerConfig_FeatureBucketizerConfig::CopyFrom(const BucketizerConfig_FeatureBucketizerConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketizerConfig_FeatureBucketizerConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void BucketizerConfig_FeatureBucketizerConfig::Swap(BucketizerConfig_FeatureBucketizerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BucketizerConfig_FeatureBucketizerConfig::InternalSwap(BucketizerConfig_FeatureBucketizerConfig* other) {
  name_.Swap(&other->name_);
  lower_bounds_.UnsafeArenaSwap(&other->lower_bounds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BucketizerConfig_FeatureBucketizerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BucketizerConfig_FeatureBucketizerConfig_descriptor_;
  metadata.reflection = BucketizerConfig_FeatureBucketizerConfig_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BucketizerConfig::kFeaturesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BucketizerConfig::BucketizerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:BucketizerConfig)
}

void BucketizerConfig::InitAsDefaultInstance() {
}

BucketizerConfig::BucketizerConfig(const BucketizerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:BucketizerConfig)
}

void BucketizerConfig::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BucketizerConfig::~BucketizerConfig() {
  // @@protoc_insertion_point(destructor:BucketizerConfig)
  SharedDtor();
}

void BucketizerConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BucketizerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BucketizerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BucketizerConfig_descriptor_;
}

const BucketizerConfig& BucketizerConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_training_5fdataset_2eproto();
  return *default_instance_;
}

BucketizerConfig* BucketizerConfig::default_instance_ = NULL;

BucketizerConfig* BucketizerConfig::New(::google::protobuf::Arena* arena) const {
  BucketizerConfig* n = new BucketizerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BucketizerConfig::Clear() {
  features_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool BucketizerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BucketizerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_features()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_features;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BucketizerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BucketizerConfig)
  return false;
#undef DO_
}

void BucketizerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BucketizerConfig)
  // repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->features(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:BucketizerConfig)
}

::google::protobuf::uint8* BucketizerConfig::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:BucketizerConfig)
  // repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
  for (unsigned int i = 0, n = this->features_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->features(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BucketizerConfig)
  return target;
}

int BucketizerConfig::ByteSize() const {
  int total_size = 0;

  // repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
  total_size += 1 * this->features_size();
  for (int i = 0; i < this->features_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->features(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BucketizerConfig::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BucketizerConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BucketizerConfig>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BucketizerConfig::MergeFrom(const BucketizerConfig& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  features_.MergeFrom(from.features_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void BucketizerConfig::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BucketizerConfig::CopyFrom(const BucketizerConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BucketizerConfig::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->features())) return false;
  return true;
}

void BucketizerConfig::Swap(BucketizerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BucketizerConfig::InternalSwap(BucketizerConfig* other) {
  features_.UnsafeArenaSwap(&other->features_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BucketizerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BucketizerConfig_descriptor_;
  metadata.reflection = BucketizerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BucketizerConfig_FeatureBucketizerConfig

// required string name = 1;
bool BucketizerConfig_FeatureBucketizerConfig::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BucketizerConfig_FeatureBucketizerConfig::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void BucketizerConfig_FeatureBucketizerConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void BucketizerConfig_FeatureBucketizerConfig::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& BucketizerConfig_FeatureBucketizerConfig::name() const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.FeatureBucketizerConfig.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BucketizerConfig_FeatureBucketizerConfig::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:BucketizerConfig.FeatureBucketizerConfig.name)
}
 void BucketizerConfig_FeatureBucketizerConfig::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:BucketizerConfig.FeatureBucketizerConfig.name)
}
 void BucketizerConfig_FeatureBucketizerConfig::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:BucketizerConfig.FeatureBucketizerConfig.name)
}
 ::std::string* BucketizerConfig_FeatureBucketizerConfig::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:BucketizerConfig.FeatureBucketizerConfig.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BucketizerConfig_FeatureBucketizerConfig::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BucketizerConfig_FeatureBucketizerConfig::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:BucketizerConfig.FeatureBucketizerConfig.name)
}

// repeated float lower_bounds = 2;
int BucketizerConfig_FeatureBucketizerConfig::lower_bounds_size() const {
  return lower_bounds_.size();
}
void BucketizerConfig_FeatureBucketizerConfig::clear_lower_bounds() {
  lower_bounds_.Clear();
}
 float BucketizerConfig_FeatureBucketizerConfig::lower_bounds(int index) const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return lower_bounds_.Get(index);
}
 void BucketizerConfig_FeatureBucketizerConfig::set_lower_bounds(int index, float value) {
  lower_bounds_.Set(index, value);
  // @@protoc_insertion_point(field_set:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
}
 void BucketizerConfig_FeatureBucketizerConfig::add_lower_bounds(float value) {
  lower_bounds_.Add(value);
  // @@protoc_insertion_point(field_add:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
}
 const ::google::protobuf::RepeatedField< float >&
BucketizerConfig_FeatureBucketizerConfig::lower_bounds() const {
  // @@protoc_insertion_point(field_list:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return lower_bounds_;
}
 ::google::protobuf::RepeatedField< float >*
BucketizerConfig_FeatureBucketizerConfig::mutable_lower_bounds() {
  // @@protoc_insertion_point(field_mutable_list:BucketizerConfig.FeatureBucketizerConfig.lower_bounds)
  return &lower_bounds_;
}

// -------------------------------------------------------------------

// BucketizerConfig

// repeated .BucketizerConfig.FeatureBucketizerConfig features = 1;
int BucketizerConfig::features_size() const {
  return features_.size();
}
void BucketizerConfig::clear_features() {
  features_.Clear();
}
const ::BucketizerConfig_FeatureBucketizerConfig& BucketizerConfig::features(int index) const {
  // @@protoc_insertion_point(field_get:BucketizerConfig.features)
  return features_.Get(index);
}
::BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig::mutable_features(int index) {
  // @@protoc_insertion_point(field_mutable:BucketizerConfig.features)
  return features_.Mutable(index);
}
::BucketizerConfig_FeatureBucketizerConfig* BucketizerConfig::add_features() {
  // @@protoc_insertion_point(field_add:BucketizerConfig.features)
  return features_.Add();
}
::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >*
BucketizerConfig::mutable_features() {
  // @@protoc_insertion_point(field_mutable_list:BucketizerConfig.features)
  return &features_;
}
const ::google::protobuf::RepeatedPtrField< ::BucketizerConfig_FeatureBucketizerConfig >&
BucketizerConfig::features() const {
  // @@protoc_insertion_point(field_list:BucketizerConfig.features)
  return features_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
